{
  "contractName": "CurveMock0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "i",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "j",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min_dy",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "exchange_underlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int128",
          "name": "dex",
          "type": "int128"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"dex\",\"type\":\"int128\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"j\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_dy\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"exchange_underlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CurveMock/CurveMock0.sol\":\"CurveMock0\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x5ca0eb1120133a6d0799752532d4638048391823a2b623c4fe9ff46e262266fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://439a76e6c35f75a7253f1ff68c99f399094233b0ddecac6bd19093f0d18980c4\",\"dweb:/ipfs/QmYGY3jR6A4k8KWzHjGG249EWR6KtoENzdPGv6MZRFhdEW\"]},\"project:/contracts/CurveMock/CurveMock0.sol\":{\"keccak256\":\"0x49027461a11915fa0e75c52e69ea15fe1f824ef1b9b915fa00a7cf0d64f66a1b\",\"urls\":[\"bzz-raw://46abce3ad2fb2074e081c9837ca1f6495abe854e2a13c717b0235583119d59d2\",\"dweb:/ipfs/QmdrJkST3NSBDrgaaJRWkEjUam42JgRkvTDKeHBQ7RPnSe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061044e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806344ee19861461003b578063e48aa7ce14610060575b600080fd5b61004e6100493660046102c6565b6100c8565b60405190815260200160405180910390f35b6100c661006e36600461031d565b600f9190910b600090815260208190526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b005b600f85900b6000908152602081905260408082205490517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101899190610350565b50600f85900b60009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836101d757620f42406101ca86620f6950610379565b6101d491906103dd565b93505b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820186905282169063a9059cbb90604401602060405180830381600087803b15801561024757600080fd5b505af115801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610350565b50929695505050505050565b8035600f81900b811461029d57600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461029d57600080fd5b600080600080600060a086880312156102de57600080fd5b6102e78661028b565b94506102f56020870161028b565b93506040860135925060608601359150610311608087016102a2565b90509295509295909350565b6000806040838503121561033057600080fd5b6103398361028b565b9150610347602084016102a2565b90509250929050565b60006020828403121561036257600080fd5b8151801515811461037257600080fd5b9392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610413577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a666e3c7f92a02e8e58504632b22ad86b903a16e9566944e2dd50dcc853a909b64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806344ee19861461003b578063e48aa7ce14610060575b600080fd5b61004e6100493660046102c6565b6100c8565b60405190815260200160405180910390f35b6100c661006e36600461031d565b600f9190910b600090815260208190526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b005b600f85900b6000908152602081905260408082205490517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b15801561015157600080fd5b505af1158015610165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101899190610350565b50600f85900b60009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff16836101d757620f42406101ca86620f6950610379565b6101d491906103dd565b93505b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820186905282169063a9059cbb90604401602060405180830381600087803b15801561024757600080fd5b505af115801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610350565b50929695505050505050565b8035600f81900b811461029d57600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461029d57600080fd5b600080600080600060a086880312156102de57600080fd5b6102e78661028b565b94506102f56020870161028b565b93506040860135925060608601359150610311608087016102a2565b90509295509295909350565b6000806040838503121561033057600080fd5b6103398361028b565b9150610347602084016102a2565b90509250929050565b60006020828403121561036257600080fd5b8151801515811461037257600080fd5b9392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610413577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a666e3c7f92a02e8e58504632b22ad86b903a16e9566944e2dd50dcc853a909b64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2950:103",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:103",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "62:114:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "72:29:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "94:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "81:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "81:20:103"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "72:5:103"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "163:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "166:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "123:5:103"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "141:2:103",
                                "type": "",
                                "value": "15"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "145:5:103"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "130:10:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "130:21:103"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "120:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:32:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:40:103"
                  },
                  "nodeType": "YulIf",
                  "src": "110:60:103"
                }
              ]
            },
            "name": "abi_decode_int128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "41:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:103",
                "type": ""
              }
            ],
            "src": "14:162:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "230:147:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "240:29:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "262:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "249:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:20:103"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "240:5:103"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "355:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "364:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "367:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "357:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "357:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "357:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "291:5:103"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:103"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "309:42:103",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "298:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "298:54:103"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "288:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "288:65:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "281:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:73:103"
                  },
                  "nodeType": "YulIf",
                  "src": "278:93:103"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "209:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "220:5:103",
                "type": ""
              }
            ],
            "src": "181:196:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "518:332:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "565:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "574:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "577:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "567:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "567:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "567:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "539:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "548:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "535:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "535:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "560:3:103",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "531:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "531:33:103"
                  },
                  "nodeType": "YulIf",
                  "src": "528:53:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "590:38:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "618:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int128",
                      "nodeType": "YulIdentifier",
                      "src": "600:17:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:28:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "590:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "637:47:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "669:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "680:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int128",
                      "nodeType": "YulIdentifier",
                      "src": "647:17:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:37:103"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "637:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "693:42:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "720:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "731:2:103",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "716:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "703:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:32:103"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "693:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "744:42:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "771:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "782:2:103",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "767:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "754:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:32:103"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "744:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "795:49:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "828:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "839:3:103",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "824:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "824:19:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "805:18:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "805:39:103"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "795:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int128t_int128t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "452:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "463:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "475:6:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "483:6:103",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "491:6:103",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "499:6:103",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "507:6:103",
                "type": ""
              }
            ],
            "src": "382:468:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:76:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "966:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "978:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "989:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "974:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "966:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1008:9:103"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1019:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1001:25:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1001:25:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "925:9:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "936:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "947:4:103",
                "type": ""
              }
            ],
            "src": "855:177:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1123:172:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1169:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1178:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1181:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1171:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1171:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1171:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1144:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1153:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1140:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1140:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1165:2:103",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1136:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1136:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1133:52:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1194:38:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int128",
                      "nodeType": "YulIdentifier",
                      "src": "1204:17:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:28:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1194:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:48:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1274:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1285:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1270:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1270:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1251:18:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:38:103"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1081:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1092:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1104:6:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1112:6:103",
                "type": ""
              }
            ],
            "src": "1037:258:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1457:241:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1467:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1479:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1490:2:103",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1475:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1467:4:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1502:52:103",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1512:42:103",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1506:2:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1570:9:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1585:6:103"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1593:2:103"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1581:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1581:15:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1563:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:34:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1563:34:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1617:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1628:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1613:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1613:18:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1637:6:103"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1645:2:103"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1633:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1633:15:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1606:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:43:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1606:43:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1669:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1680:2:103",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1665:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:18:103"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1685:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:34:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1658:34:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1410:9:103",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1421:6:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1429:6:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1437:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1448:4:103",
                "type": ""
              }
            ],
            "src": "1300:398:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1781:199:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1827:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1836:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1839:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1829:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1829:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1829:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1802:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1811:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1798:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1798:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1823:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1794:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1791:52:103"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1852:29:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1871:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1865:5:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1865:16:103"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1856:5:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1934:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1943:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1946:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1936:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1936:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1936:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1903:5:103"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1924:5:103"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1917:6:103"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1917:13:103"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1910:6:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1910:21:103"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1900:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:32:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:40:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1890:60:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1959:15:103",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1969:5:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1959:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1747:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1758:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1770:6:103",
                "type": ""
              }
            ],
            "src": "1703:277:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2037:330:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2164:168:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2185:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2188:77:103",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2178:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2178:88:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2178:88:103"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2286:1:103",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2289:4:103",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2279:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2279:15:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2279:15:103"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2314:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2317:4:103",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2307:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2307:15:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2307:15:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2068:1:103"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2061:6:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2061:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2054:6:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:17:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2076:1:103"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2083:66:103",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2151:1:103"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2079:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2079:74:103"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2073:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:81:103"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2050:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:105:103"
                  },
                  "nodeType": "YulIf",
                  "src": "2047:285:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2341:20:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2356:1:103"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2359:1:103"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2352:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2352:9:103"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2341:7:103"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2016:1:103",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2019:1:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2025:7:103",
                "type": ""
              }
            ],
            "src": "1985:382:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2418:228:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2449:168:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2470:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2473:77:103",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2463:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2463:88:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2463:88:103"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2571:1:103",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2574:4:103",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2564:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2564:15:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2564:15:103"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2599:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2602:4:103",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2592:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2592:15:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2592:15:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2438:1:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2431:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:9:103"
                  },
                  "nodeType": "YulIf",
                  "src": "2428:189:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2626:14:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2635:1:103"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2638:1:103"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2631:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2631:9:103"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2626:1:103"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2403:1:103",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2406:1:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2412:1:103",
                "type": ""
              }
            ],
            "src": "2372:274:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2780:168:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2790:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2802:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2813:2:103",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2798:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2790:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2832:9:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2847:6:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2855:42:103",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:55:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2825:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2825:74:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2825:74:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2919:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2930:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2915:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2915:18:103"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2935:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2908:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:34:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2908:34:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2741:9:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2752:6:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2760:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2771:4:103",
                "type": ""
              }
            ],
            "src": "2651:297:103"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_int128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, signextend(15, value))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_int128t_int128t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_int128(headStart)\n        value1 := abi_decode_int128(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_int128t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_int128(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x)))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 103,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "144:1068:45:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "144:1068:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:896;;;;;;:::i;:::-;;:::i;:::-;;;1001:25:103;;;989:2;974:18;215:896:45;;;;;;;1117:93;;;;;;:::i;:::-;1181:15;;;;;:10;:15;;;;;;;;;;:22;;;;;;;;;;;;;;1117:93;;;215:896;505:13;;;;374:7;505:13;;;;;;;;;;;;487:76;;;;;533:10;487:76;;;1563:34:103;553:4:45;1613:18:103;;;1606:43;1665:18;;;1658:34;;;505:13:45;;;;;487:45;;1475:18:103;;487:76:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;707:13:45;;;;662:24;707:13;;;;;;;;;;;;;830:11;826:77;;883:9;866:14;:2;871:9;866:14;:::i;:::-;:26;;;;:::i;:::-;857:35;;826:77;999:33;;;;;:15;2843:55:103;;;999:33:45;;;2825:74:103;2915:18;;;2908:34;;;999:15:45;;;;;2798:18:103;;999:33:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1098:6:45;;215:896;-1:-1:-1;;;;;;215:896:45:o;14:162:103:-;81:20;;141:2;130:21;;;120:32;;110:60;;166:1;163;156:12;110:60;14:162;;;:::o;181:196::-;249:20;;309:42;298:54;;288:65;;278:93;;367:1;364;357:12;382:468;475:6;483;491;499;507;560:3;548:9;539:7;535:23;531:33;528:53;;;577:1;574;567:12;528:53;600:28;618:9;600:28;:::i;:::-;590:38;;647:37;680:2;669:9;665:18;647:37;:::i;:::-;637:47;;731:2;720:9;716:18;703:32;693:42;;782:2;771:9;767:18;754:32;744:42;;805:39;839:3;828:9;824:19;805:39;:::i;:::-;795:49;;382:468;;;;;;;;:::o;1037:258::-;1104:6;1112;1165:2;1153:9;1144:7;1140:23;1136:32;1133:52;;;1181:1;1178;1171:12;1133:52;1204:28;1222:9;1204:28;:::i;:::-;1194:38;;1251;1285:2;1274:9;1270:18;1251:38;:::i;:::-;1241:48;;1037:258;;;;;:::o;1703:277::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;1871:9;1865:16;1924:5;1917:13;1910:21;1903:5;1900:32;1890:60;;1946:1;1943;1936:12;1890:60;1969:5;1703:277;-1:-1:-1;;;1703:277:103:o;1985:382::-;2025:7;2151:1;2083:66;2079:74;2076:1;2073:81;2068:1;2061:9;2054:17;2050:105;2047:285;;;2188:77;2185:1;2178:88;2289:4;2286:1;2279:15;2317:4;2314:1;2307:15;2047:285;-1:-1:-1;2352:9:103;;1985:382::o;2372:274::-;2412:1;2438;2428:189;;2473:77;2470:1;2463:88;2574:4;2571:1;2564:15;2602:4;2599:1;2592:15;2428:189;-1:-1:-1;2631:9:103;;2372:274::o",
  "source": "pragma solidity ^0.8.4;\n\nimport './../@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\n\n//import 'hardhat/console.sol';\n\ncontract CurveMock0 {\n\n    mapping(int128 => address) currencies;\n\n    function exchange_underlying(\n        int128 i,\n        int128 j,\n        uint256 dx,\n        uint256 min_dy,\n        address receiver\n    ) external returns (uint256) {\n\n        // Transfer the dx to this\n        //console.log('PRE-TRANSFER', currencies[i], dx);\n        IERC20Upgradeable(currencies[i]).transferFrom(msg.sender, address(this), dx);\n        //console.log('POST-TRANSFER', currencies[i], dx);\n        // Aprove dy transfer\n        IERC20Upgradeable dyCoin = IERC20Upgradeable(currencies[j]);\n\n        // Return an exchange rate to the front end\n        // who asks by giving a 0 min_dy.\n        if (min_dy == 0) {\n            min_dy = dx * 1_010_000 / 1_000_000;\n        }\n\n        // Transfer the dy to receiver\n        //console.log('PRE-TRANSFER', min_dy);\n        dyCoin.transfer(receiver, min_dy);\n\n        //console.log('POST-TRANSFER', min_dy);\n        return min_dy;\n    }\n\n    function addCurrency(int128 dex, address addr) public {\n        currencies[dex] = addr;\n    }\n}\n",
  "sourcePath": "/Users/allan/src/mf/HomeDAO/contracts/CurveMock/CurveMock0.sol",
  "ast": {
    "absolutePath": "project:/contracts/CurveMock/CurveMock0.sol",
    "exportedSymbols": {
      "CurveMock0": [
        11922
      ],
      "IERC20Upgradeable": [
        1023
      ]
    },
    "id": 11923,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11840,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "./../@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 11841,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11923,
        "sourceUnit": 1024,
        "src": "25:84:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CurveMock0",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11922,
        "linearizedBaseContracts": [
          11922
        ],
        "name": "CurveMock0",
        "nameLocation": "153:10:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11845,
            "mutability": "mutable",
            "name": "currencies",
            "nameLocation": "198:10:45",
            "nodeType": "VariableDeclaration",
            "scope": 11922,
            "src": "171:37:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int128_$_t_address_$",
              "typeString": "mapping(int128 => address)"
            },
            "typeName": {
              "id": 11844,
              "keyType": {
                "id": 11842,
                "name": "int128",
                "nodeType": "ElementaryTypeName",
                "src": "179:6:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_int128",
                  "typeString": "int128"
                }
              },
              "nodeType": "Mapping",
              "src": "171:26:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int128_$_t_address_$",
                "typeString": "mapping(int128 => address)"
              },
              "valueType": {
                "id": 11843,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "189:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11906,
              "nodeType": "Block",
              "src": "383:728:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "533:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "533:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11870,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "553:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveMock0_$11922",
                              "typeString": "contract CurveMock0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveMock0_$11922",
                              "typeString": "contract CurveMock0"
                            }
                          ],
                          "id": 11869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "545:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "545:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "545:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11872,
                        "name": "dx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11851,
                        "src": "560:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 11861,
                              "name": "currencies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11845,
                              "src": "505:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int128_$_t_address_$",
                                "typeString": "mapping(int128 => address)"
                              }
                            },
                            "id": 11863,
                            "indexExpression": {
                              "id": 11862,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11847,
                              "src": "516:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int128",
                                "typeString": "int128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "505:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11860,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "487:17:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1023_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 11864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "487:32:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1023",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 11865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1004,
                      "src": "487:45:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:76:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11874,
                  "nodeType": "ExpressionStatement",
                  "src": "487:76:45"
                },
                {
                  "assignments": [
                    11877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11877,
                      "mutability": "mutable",
                      "name": "dyCoin",
                      "nameLocation": "680:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11906,
                      "src": "662:24:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$1023",
                        "typeString": "contract IERC20Upgradeable"
                      },
                      "typeName": {
                        "id": 11876,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11875,
                          "name": "IERC20Upgradeable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1023,
                          "src": "662:17:45"
                        },
                        "referencedDeclaration": 1023,
                        "src": "662:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1023",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11883,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 11879,
                          "name": "currencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11845,
                          "src": "707:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int128_$_t_address_$",
                            "typeString": "mapping(int128 => address)"
                          }
                        },
                        "id": 11881,
                        "indexExpression": {
                          "id": 11880,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11849,
                          "src": "718:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "707:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11878,
                      "name": "IERC20Upgradeable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "689:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1023_$",
                        "typeString": "type(contract IERC20Upgradeable)"
                      }
                    },
                    "id": 11882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$1023",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "662:59:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11884,
                      "name": "min_dy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11853,
                      "src": "830:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "840:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "830:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11896,
                  "nodeType": "IfStatement",
                  "src": "826:77:45",
                  "trueBody": {
                    "id": 11895,
                    "nodeType": "Block",
                    "src": "843:60:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 11893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11887,
                            "name": "min_dy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11853,
                            "src": "857:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 11888,
                                "name": "dx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11851,
                                "src": "866:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "315f3031305f303030",
                                "id": 11889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "871:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1010000_by_1",
                                  "typeString": "int_const 1010000"
                                },
                                "value": "1_010_000"
                              },
                              "src": "866:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "315f3030305f303030",
                              "id": 11891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "883:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1_000_000"
                            },
                            "src": "866:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "857:35:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11894,
                        "nodeType": "ExpressionStatement",
                        "src": "857:35:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11900,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11855,
                        "src": "1015:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11901,
                        "name": "min_dy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11853,
                        "src": "1025:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11897,
                        "name": "dyCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11877,
                        "src": "999:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1023",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 11899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 972,
                      "src": "999:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "999:33:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11903,
                  "nodeType": "ExpressionStatement",
                  "src": "999:33:45"
                },
                {
                  "expression": {
                    "id": 11904,
                    "name": "min_dy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11853,
                    "src": "1098:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11859,
                  "id": 11905,
                  "nodeType": "Return",
                  "src": "1091:13:45"
                }
              ]
            },
            "functionSelector": "44ee1986",
            "id": 11907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange_underlying",
            "nameLocation": "224:19:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11847,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "260:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "253:8:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 11846,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11849,
                  "mutability": "mutable",
                  "name": "j",
                  "nameLocation": "278:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "271:8:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 11848,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11851,
                  "mutability": "mutable",
                  "name": "dx",
                  "nameLocation": "297:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "289:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11853,
                  "mutability": "mutable",
                  "name": "min_dy",
                  "nameLocation": "317:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "309:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11855,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "341:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "333:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "243:112:45"
            },
            "returnParameters": {
              "id": 11859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11907,
                  "src": "374:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "373:9:45"
            },
            "scope": 11922,
            "src": "215:896:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11920,
              "nodeType": "Block",
              "src": "1171:39:45",
              "statements": [
                {
                  "expression": {
                    "id": 11918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11914,
                        "name": "currencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11845,
                        "src": "1181:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int128_$_t_address_$",
                          "typeString": "mapping(int128 => address)"
                        }
                      },
                      "id": 11916,
                      "indexExpression": {
                        "id": 11915,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11909,
                        "src": "1192:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1181:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11917,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11911,
                      "src": "1199:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1181:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11919,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:22:45"
                }
              ]
            },
            "functionSelector": "e48aa7ce",
            "id": 11921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCurrency",
            "nameLocation": "1126:11:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11909,
                  "mutability": "mutable",
                  "name": "dex",
                  "nameLocation": "1145:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "1138:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 11908,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11911,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1158:4:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11921,
                  "src": "1150:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1137:26:45"
            },
            "returnParameters": {
              "id": 11913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:45"
            },
            "scope": 11922,
            "src": "1117:93:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11923,
        "src": "144:1068:45",
        "usedErrors": []
      }
    ],
    "src": "0:1213:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xeE33CB7c51183C03AaFCc539d5Ba476daebA7a76"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-06T06:58:46.644Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}