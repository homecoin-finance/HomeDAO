{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "delegateCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numDelegateCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "setStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "rinkebyOnlySetStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "project:/contracts/BaconCoin/BaconCoin3.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        11902
      ],
      "BaconCoin3": [
        20180
      ],
      "ContextUpgradeable": [
        11946
      ],
      "ERC20UpgradeableFromERC777": [
        21786
      ],
      "IERC1820RegistryUpgradeable": [
        12297
      ],
      "IERC20MetadataUpgradeable": [
        9112
      ],
      "IERC20Upgradeable": [
        9087
      ],
      "Initializable": [
        8265
      ],
      "SafeMath": [
        16736
      ],
      "SignedSafeMath": [
        16800
      ]
    },
    "id": 20181,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19368,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:55"
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 19369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20181,
        "sourceUnit": 8266,
        "src": "57:78:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20/ERC20UpgradeableFromERC777.sol",
        "file": "./../ERC20/ERC20UpgradeableFromERC777.sol",
        "id": 19370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20181,
        "sourceUnit": 21787,
        "src": "136:51:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "../@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 19371,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20181,
        "sourceUnit": 16737,
        "src": "188:60:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "file": "../@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "id": 19372,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20181,
        "sourceUnit": 16801,
        "src": "249:66:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19373,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8265,
              "src": "340:13:55"
            },
            "id": 19374,
            "nodeType": "InheritanceSpecifier",
            "src": "340:13:55"
          },
          {
            "baseName": {
              "id": 19375,
              "name": "ERC20UpgradeableFromERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21786,
              "src": "355:26:55"
            },
            "id": 19376,
            "nodeType": "InheritanceSpecifier",
            "src": "355:26:55"
          }
        ],
        "canonicalName": "BaconCoin3",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20180,
        "linearizedBaseContracts": [
          20180,
          21786,
          9112,
          9087,
          11946,
          8265
        ],
        "name": "BaconCoin3",
        "nameLocation": "326:10:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19379,
            "libraryName": {
              "id": 19377,
              "name": "SignedSafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16800,
              "src": "394:14:55"
            },
            "nodeType": "UsingForDirective",
            "src": "388:32:55",
            "typeName": {
              "id": 19378,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "413:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 19382,
            "libraryName": {
              "id": 19380,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16736,
              "src": "431:8:55"
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:55",
            "typeName": {
              "id": 19381,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 19384,
            "mutability": "mutable",
            "name": "stakingContract",
            "nameLocation": "466:15:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "458:23:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19383,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:55",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19386,
            "mutability": "mutable",
            "name": "airdropContract",
            "nameLocation": "495:15:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "487:23:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19385,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "487:7:55",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19387,
              "nodeType": "StructuredDocumentation",
              "src": "517:89:55",
              "text": "@notice DEPRECATED  \n A record of votes checkpoints for each account, by index"
            },
            "functionSelector": "f1127ed8",
            "id": 19394,
            "mutability": "mutable",
            "name": "checkpoints",
            "nameLocation": "670:11:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "611:70:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint))"
            },
            "typeName": {
              "id": 19393,
              "keyType": {
                "id": 19388,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "620:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "611:51:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint))"
              },
              "valueType": {
                "id": 19392,
                "keyType": {
                  "id": 19389,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "640:6:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "631:30:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                  "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint)"
                },
                "valueType": {
                  "id": 19391,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 19390,
                    "name": "Checkpoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19404,
                    "src": "650:10:55"
                  },
                  "referencedDeclaration": 19404,
                  "src": "650:10:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$19404_storage_ptr",
                    "typeString": "struct BaconCoin3.Checkpoint"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19395,
              "nodeType": "StructuredDocumentation",
              "src": "688:75:55",
              "text": "@notice DEPRECATED  \n The number of checkpoints for each account"
            },
            "functionSelector": "6fcfff45",
            "id": 19399,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nameLocation": "803:14:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "768:49:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 19398,
              "keyType": {
                "id": 19396,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "777:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "768:27:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 19397,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "788:6:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BaconCoin3.Checkpoint",
            "id": 19404,
            "members": [
              {
                "constant": false,
                "id": 19401,
                "mutability": "mutable",
                "name": "fromBlock",
                "nameLocation": "935:9:55",
                "nodeType": "VariableDeclaration",
                "scope": 19404,
                "src": "928:16:55",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 19400,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "928:6:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19403,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "962:5:55",
                "nodeType": "VariableDeclaration",
                "scope": 19404,
                "src": "954:13:55",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19402,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "954:7:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nameLocation": "907:10:55",
            "nodeType": "StructDefinition",
            "scope": 20180,
            "src": "900:74:55",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19405,
              "nodeType": "StructuredDocumentation",
              "src": "980:46:55",
              "text": "@notice A record of each accounts delegate"
            },
            "functionSelector": "587cde1e",
            "id": 19409,
            "mutability": "mutable",
            "name": "delegates",
            "nameLocation": "1067:9:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "1031:45:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 19408,
              "keyType": {
                "id": 19406,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1040:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1031:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 19407,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1051:7:55",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 19410,
              "nodeType": "StructuredDocumentation",
              "src": "1083:58:55",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "id": 19415,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nameLocation": "1170:15:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "1146:122:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19411,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1146:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 19413,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1198:69:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 19412,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1188:9:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19414,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1188:80:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 19416,
              "nodeType": "StructuredDocumentation",
              "src": "1275:79:55",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
            },
            "functionSelector": "e7a324dc",
            "id": 19421,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nameLocation": "1383:19:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "1359:117:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19417,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 19419,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1415:60:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 19418,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1405:9:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1405:71:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 19422,
              "nodeType": "StructuredDocumentation",
              "src": "1483:75:55",
              "text": "@notice The EIP-712 typehash for the permit struct used by the contract"
            },
            "functionSelector": "30adf81f",
            "id": 19427,
            "mutability": "constant",
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "1587:15:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "1563:137:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19423,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1563:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 19425,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1615:84:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 19424,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1605:9:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19426,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1605:95:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19428,
              "nodeType": "StructuredDocumentation",
              "src": "1707:66:55",
              "text": "@notice A record of states for signing / validating signatures"
            },
            "functionSelector": "7ecebe00",
            "id": 19432,
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "1811:6:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "1778:39:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 19431,
              "keyType": {
                "id": 19429,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1787:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1778:25:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19430,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1798:4:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19433,
              "nodeType": "StructuredDocumentation",
              "src": "1986:76:55",
              "text": "@notice A record of votes checkpoints for a delegate's account, by index"
            },
            "functionSelector": "509c3ef0",
            "id": 19440,
            "mutability": "mutable",
            "name": "delegateCheckpoints",
            "nameLocation": "2126:19:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "2067:78:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint))"
            },
            "typeName": {
              "id": 19439,
              "keyType": {
                "id": 19434,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2076:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2067:51:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint))"
              },
              "valueType": {
                "id": 19438,
                "keyType": {
                  "id": 19435,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2096:6:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2087:30:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                  "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint)"
                },
                "valueType": {
                  "id": 19437,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 19436,
                    "name": "Checkpoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19404,
                    "src": "2106:10:55"
                  },
                  "referencedDeclaration": 19404,
                  "src": "2106:10:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$19404_storage_ptr",
                    "typeString": "struct BaconCoin3.Checkpoint"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19441,
              "nodeType": "StructuredDocumentation",
              "src": "2152:54:55",
              "text": "@notice The number of checkpoints for each account"
            },
            "functionSelector": "a11c4741",
            "id": 19445,
            "mutability": "mutable",
            "name": "numDelegateCheckpoints",
            "nameLocation": "2246:22:55",
            "nodeType": "VariableDeclaration",
            "scope": 20180,
            "src": "2211:57:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 19444,
              "keyType": {
                "id": 19442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2220:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2211:27:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 19443,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "2231:6:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 19446,
              "nodeType": "StructuredDocumentation",
              "src": "2418:71:55",
              "text": "@notice An event thats emitted when an account changes its delegate"
            },
            "id": 19454,
            "name": "DelegateChanged",
            "nameLocation": "2500:15:55",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19448,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nameLocation": "2532:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19454,
                  "src": "2516:25:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19450,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nameLocation": "2559:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19454,
                  "src": "2543:28:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19452,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nameLocation": "2589:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19454,
                  "src": "2573:26:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2515:85:55"
            },
            "src": "2494:107:55"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 19455,
              "nodeType": "StructuredDocumentation",
              "src": "2607:81:55",
              "text": "@notice An event thats emitted when a delegate account's vote balance changes"
            },
            "id": 19463,
            "name": "DelegateVotesChanged",
            "nameLocation": "2699:20:55",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19457,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nameLocation": "2736:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19463,
                  "src": "2720:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19459,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nameLocation": "2751:15:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19463,
                  "src": "2746:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19458,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19461,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nameLocation": "2773:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19463,
                  "src": "2768:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19460,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:65:55"
            },
            "src": "2693:92:55"
          },
          {
            "body": {
              "id": 19480,
              "nodeType": "Block",
              "src": "2999:117:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3017:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3017:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 19471,
                          "name": "stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19384,
                          "src": "3031:15:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3017:29:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073656e646572",
                        "id": 19473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3048:16:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
                          "typeString": "literal_string \"Invalid sender\""
                        },
                        "value": "Invalid sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0",
                          "typeString": "literal_string \"Invalid sender\""
                        }
                      ],
                      "id": 19468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3009:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3009:56:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19475,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:56:55"
                },
                {
                  "expression": {
                    "id": 19478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19476,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19384,
                      "src": "3075:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19477,
                      "name": "_stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19465,
                      "src": "3093:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3075:34:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19479,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:34:55"
                }
              ]
            },
            "functionSelector": "9dd373b9",
            "id": 19481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingContract",
            "nameLocation": "2947:18:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19465,
                  "mutability": "mutable",
                  "name": "_stakingContract",
                  "nameLocation": "2974:16:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19481,
                  "src": "2966:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2965:26:55"
            },
            "returnParameters": {
              "id": 19467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2999:0:55"
            },
            "scope": 20180,
            "src": "2938:178:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19503,
              "nodeType": "Block",
              "src": "3194:186:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 19495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 19490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 19487,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3212:3:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 19488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3212:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "307836303265623531383043653234323430636634306638424531323443633464336132383930363836",
                            "id": 19489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3226:42:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x602eb5180Ce24240cf40f8BE124Cc4d3a2890686"
                          },
                          "src": "3212:56:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 19494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 19491,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3272:5:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 19492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "3272:13:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 19493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3289:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "3272:18:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3212:78:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20496e76616c69642073656e646572206f7220636861696e",
                        "id": 19496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3292:36:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09b7c37f7d299da33060db30c0be756d0fd5d461225b9c62e1993e342f47c7e3",
                          "typeString": "literal_string \"BaconCoin: Invalid sender or chain\""
                        },
                        "value": "BaconCoin: Invalid sender or chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09b7c37f7d299da33060db30c0be756d0fd5d461225b9c62e1993e342f47c7e3",
                          "typeString": "literal_string \"BaconCoin: Invalid sender or chain\""
                        }
                      ],
                      "id": 19486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3204:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3204:125:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19498,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:125:55"
                },
                {
                  "expression": {
                    "id": 19501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19499,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19384,
                      "src": "3339:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19500,
                      "name": "_stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19483,
                      "src": "3357:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3339:34:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19502,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:34:55"
                }
              ]
            },
            "functionSelector": "e3957155",
            "id": 19504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rinkebyOnlySetStakingContract",
            "nameLocation": "3131:29:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19483,
                  "mutability": "mutable",
                  "name": "_stakingContract",
                  "nameLocation": "3169:16:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19504,
                  "src": "3161:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3161:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3160:26:55"
            },
            "returnParameters": {
              "id": 19485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3194:0:55"
            },
            "scope": 20180,
            "src": "3122:258:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21356
            ],
            "body": {
              "id": 19535,
              "nodeType": "Block",
              "src": "3552:145:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19517,
                            "name": "dst",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19506,
                            "src": "3585:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 19518,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19508,
                            "src": "3590:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 19515,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3570:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_BaconCoin3_$20180_$",
                              "typeString": "type(contract super BaconCoin3)"
                            }
                          },
                          "id": 19516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21356,
                          "src": "3570:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 19519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3570:27:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3562:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:36:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19521,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:36:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 19523,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "3623:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19526,
                        "indexExpression": {
                          "expression": {
                            "id": 19524,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3633:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3633:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3623:21:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 19527,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "3646:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19529,
                        "indexExpression": {
                          "id": 19528,
                          "name": "dst",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19506,
                          "src": "3656:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3646:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19530,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19508,
                        "src": "3662:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19522,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20106,
                      "src": "3608:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19532,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:61:55"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 19533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3686:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 19513,
                  "id": 19534,
                  "nodeType": "Return",
                  "src": "3679:11:55"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 19536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3486:8:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19510,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3528:8:55"
            },
            "parameters": {
              "id": 19509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19506,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "3503:3:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19536,
                  "src": "3495:11:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19508,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3513:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19536,
                  "src": "3508:11:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19507,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3494:26:55"
            },
            "returnParameters": {
              "id": 19513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19536,
                  "src": "3546:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19511,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3545:6:55"
            },
            "scope": 20180,
            "src": "3477:220:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21443
            ],
            "body": {
              "id": 19569,
              "nodeType": "Block",
              "src": "3893:147:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19551,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19538,
                            "src": "3930:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 19552,
                            "name": "dst",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19540,
                            "src": "3935:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 19553,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19542,
                            "src": "3940:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 19549,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3911:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_BaconCoin3_$20180_$",
                              "typeString": "type(contract super BaconCoin3)"
                            }
                          },
                          "id": 19550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21443,
                          "src": "3911:18:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 19554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3911:36:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3903:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3903:45:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19556,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:45:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 19558,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "3973:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19560,
                        "indexExpression": {
                          "id": 19559,
                          "name": "src",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19538,
                          "src": "3983:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3973:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 19561,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "3989:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19563,
                        "indexExpression": {
                          "id": 19562,
                          "name": "dst",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19540,
                          "src": "3999:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3989:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19542,
                        "src": "4005:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19557,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20106,
                      "src": "3958:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:54:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19566,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:54:55"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 19567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4029:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 19547,
                  "id": 19568,
                  "nodeType": "Return",
                  "src": "4022:11:55"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 19570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3807:12:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19544,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3869:8:55"
            },
            "parameters": {
              "id": 19543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19538,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "3828:3:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19570,
                  "src": "3820:11:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3820:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19540,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "3841:3:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19570,
                  "src": "3833:11:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19542,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3854:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19570,
                  "src": "3846:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3819:42:55"
            },
            "returnParameters": {
              "id": 19547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19570,
                  "src": "3887:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3886:6:55"
            },
            "scope": 20180,
            "src": "3798:242:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19608,
              "nodeType": "Block",
              "src": "4100:213:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 19586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 19581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 19578,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4118:3:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 19579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4118:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 19580,
                            "name": "stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19384,
                            "src": "4132:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4118:29:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 19585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 19582,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4151:3:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 19583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4151:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 19584,
                            "name": "airdropContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19386,
                            "src": "4165:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4151:29:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4118:62:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d696e742073656e646572",
                        "id": 19587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4182:21:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11376aeeca069ead4350fca39b5d9c1127aad4628b9952cdb72f4bfe9d8d5e1d",
                          "typeString": "literal_string \"Invalid mint sender\""
                        },
                        "value": "Invalid mint sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11376aeeca069ead4350fca39b5d9c1127aad4628b9952cdb72f4bfe9d8d5e1d",
                          "typeString": "literal_string \"Invalid mint sender\""
                        }
                      ],
                      "id": 19577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4110:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:94:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19589,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:94:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19593,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19572,
                        "src": "4226:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19594,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19574,
                        "src": "4235:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 19590,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4214:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaconCoin3_$20180_$",
                          "typeString": "type(contract super BaconCoin3)"
                        }
                      },
                      "id": 19592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21642,
                      "src": "4214:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 19595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19596,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:28:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4275:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4267:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4267:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4267:10:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 19602,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "4279:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19604,
                        "indexExpression": {
                          "id": 19603,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19572,
                          "src": "4289:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4279:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19605,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19574,
                        "src": "4299:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19597,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20106,
                      "src": "4252:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4252:54:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19607,
                  "nodeType": "ExpressionStatement",
                  "src": "4252:54:55"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 19609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "4055:4:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19572,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4068:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19609,
                  "src": "4060:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4060:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19574,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4085:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19609,
                  "src": "4077:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4059:33:55"
            },
            "returnParameters": {
              "id": 19576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4100:0:55"
            },
            "scope": 20180,
            "src": "4046:267:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19636,
              "nodeType": "Block",
              "src": "4375:115:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4397:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4397:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19621,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19611,
                        "src": "4409:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 19616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4385:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BaconCoin3_$20180_$",
                          "typeString": "type(contract super BaconCoin3)"
                        }
                      },
                      "id": 19618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21714,
                      "src": "4385:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 19622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4385:31:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19623,
                  "nodeType": "ExpressionStatement",
                  "src": "4385:31:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 19625,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19409,
                          "src": "4441:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 19628,
                        "indexExpression": {
                          "expression": {
                            "id": 19626,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4451:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4451:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4441:21:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4472:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4464:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4464:7:55",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4464:10:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19633,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19611,
                        "src": "4476:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19624,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20106,
                      "src": "4426:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4426:57:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19635,
                  "nodeType": "ExpressionStatement",
                  "src": "4426:57:55"
                }
              ]
            },
            "functionSelector": "fe9d9303",
            "id": 19637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "4328:4:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19611,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4341:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19637,
                  "src": "4333:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19613,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4362:4:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19637,
                  "src": "4349:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19612,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4349:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4332:35:55"
            },
            "returnParameters": {
              "id": 19615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4375:0:55"
            },
            "scope": 20180,
            "src": "4319:171:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19645,
              "nodeType": "Block",
              "src": "4647:25:55",
              "statements": [
                {
                  "expression": {
                    "hexValue": "33",
                    "id": 19643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4664:1:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "functionReturnParameters": 19642,
                  "id": 19644,
                  "nodeType": "Return",
                  "src": "4657:8:55"
                }
              ]
            },
            "documentation": {
              "id": 19638,
              "nodeType": "StructuredDocumentation",
              "src": "4496:100:55",
              "text": "   @dev Function version returns uint depending on what version the contract is on"
            },
            "functionSelector": "54fd4d50",
            "id": 19646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nameLocation": "4610:7:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4617:2:55"
            },
            "returnParameters": {
              "id": 19642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19646,
                  "src": "4641:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4640:6:55"
            },
            "scope": 20180,
            "src": "4601:71:55",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19669,
              "nodeType": "Block",
              "src": "4765:75:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19656,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19648,
                          "src": "4783:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 19659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 19657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4787:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 19658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4790:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "4787:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "4783:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 19661,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19650,
                        "src": "4794:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 19655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4775:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4775:32:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19663,
                  "nodeType": "ExpressionStatement",
                  "src": "4775:32:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19666,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19648,
                        "src": "4831:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4824:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 19664,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4824:6:55",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 19667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4824:9:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 19654,
                  "id": 19668,
                  "nodeType": "Return",
                  "src": "4817:16:55"
                }
              ]
            },
            "id": 19670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nameLocation": "4691:6:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19648,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "4703:1:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19670,
                  "src": "4698:6:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19647,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19650,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "4720:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19670,
                  "src": "4706:26:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4697:36:55"
            },
            "returnParameters": {
              "id": 19654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19670,
                  "src": "4757:6:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 19652,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4756:8:55"
            },
            "scope": 20180,
            "src": "4682:158:55",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19681,
              "nodeType": "Block",
              "src": "4897:154:55",
              "statements": [
                {
                  "assignments": [
                    19676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19676,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "4915:7:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19681,
                      "src": "4907:15:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19675,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4907:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19677,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4907:15:55"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4997:24:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4999:20:55",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "5010:7:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5010:9:55"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "4999:7:55"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 19676,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4999:7:55",
                      "valueSize": 1
                    }
                  ],
                  "id": 19678,
                  "nodeType": "InlineAssembly",
                  "src": "4988:33:55"
                },
                {
                  "expression": {
                    "id": 19679,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19676,
                    "src": "5037:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19674,
                  "id": 19680,
                  "nodeType": "Return",
                  "src": "5030:14:55"
                }
              ]
            },
            "id": 19682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nameLocation": "4855:10:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4865:2:55"
            },
            "returnParameters": {
              "id": 19674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19682,
                  "src": "4891:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4890:6:55"
            },
            "scope": 20180,
            "src": "4846:205:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19785,
              "nodeType": "Block",
              "src": "5695:659:55",
              "statements": [
                {
                  "assignments": [
                    19699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19699,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "5713:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19785,
                      "src": "5705:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19698,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5705:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19703,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19415,
                            "src": "5752:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 19707,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21291,
                                      "src": "5785:4:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 19708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5785:6:55",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 19706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5779:5:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 19705,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5779:5:55",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 19709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5779:13:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 19704,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "5769:9:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 19710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5769:24:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19711,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19682,
                              "src": "5795:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 19712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5795:12:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 19715,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5817:4:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaconCoin3_$20180",
                                  "typeString": "contract BaconCoin3"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaconCoin3_$20180",
                                  "typeString": "contract BaconCoin3"
                                }
                              ],
                              "id": 19714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5809:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19713,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5809:7:55",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5809:13:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19701,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5741:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5741:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5741:82:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19700,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5731:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 19718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:93:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5705:119:55"
                },
                {
                  "assignments": [
                    19721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19721,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "5842:10:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19785,
                      "src": "5834:18:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19720,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5834:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19731,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19725,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19421,
                            "src": "5876:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 19726,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19685,
                            "src": "5897:9:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 19727,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19687,
                            "src": "5908:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 19728,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19689,
                            "src": "5915:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 19723,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5865:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5865:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5865:57:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19722,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5855:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 19730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5834:89:55"
                },
                {
                  "assignments": [
                    19733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19733,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "5941:6:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19785,
                      "src": "5933:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19732,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5933:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 19737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5977:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 19738,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19699,
                            "src": "5989:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 19739,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19721,
                            "src": "6006:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 19735,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5960:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5960:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5960:57:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19734,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5950:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 19741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5950:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5933:85:55"
                },
                {
                  "assignments": [
                    19744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19744,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nameLocation": "6036:9:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19785,
                      "src": "6028:17:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19743,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6028:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19751,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 19746,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19733,
                        "src": "6058:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19747,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19691,
                        "src": "6066:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 19748,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19693,
                        "src": "6069:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19749,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19695,
                        "src": "6072:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 19745,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "6048:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 19750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6048:26:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6028:46:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19753,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19744,
                          "src": "6092:9:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 19756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6113:1:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 19755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6105:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19754,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6105:7:55",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 19757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6105:10:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6092:23:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20696e76616c6964207369676e6174757265",
                        "id": 19759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6117:30:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fe86f1a70d8a73c963779166189a0f6adfd51c9d80749604e17aab463f4e740",
                          "typeString": "literal_string \"BaconCoin: invalid signature\""
                        },
                        "value": "BaconCoin: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fe86f1a70d8a73c963779166189a0f6adfd51c9d80749604e17aab463f4e740",
                          "typeString": "literal_string \"BaconCoin: invalid signature\""
                        }
                      ],
                      "id": 19752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6084:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6084:64:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19761,
                  "nodeType": "ExpressionStatement",
                  "src": "6084:64:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19763,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19687,
                          "src": "6166:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 19767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6175:19:55",
                          "subExpression": {
                            "baseExpression": {
                              "id": 19764,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19432,
                              "src": "6175:6:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 19766,
                            "indexExpression": {
                              "id": 19765,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19744,
                              "src": "6182:9:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6175:17:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6166:28:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20696e76616c6964206e6f6e6365",
                        "id": 19769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6196:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7fb70ccf7a4851ea9ae667899fb553a7c6a271982ae4c75b45e64df0883ce54",
                          "typeString": "literal_string \"BaconCoin: invalid nonce\""
                        },
                        "value": "BaconCoin: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7fb70ccf7a4851ea9ae667899fb553a7c6a271982ae4c75b45e64df0883ce54",
                          "typeString": "literal_string \"BaconCoin: invalid nonce\""
                        }
                      ],
                      "id": 19762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6158:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6158:65:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19771,
                  "nodeType": "ExpressionStatement",
                  "src": "6158:65:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19773,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "6241:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6241:15:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 19775,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19689,
                          "src": "6260:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6241:25:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a207369676e61747572652065787069726564",
                        "id": 19777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6268:30:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fccfe800880a6da3c737bcad078a68cd689f75542bc1eb09938d4cd675e09c2",
                          "typeString": "literal_string \"BaconCoin: signature expired\""
                        },
                        "value": "BaconCoin: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fccfe800880a6da3c737bcad078a68cd689f75542bc1eb09938d4cd675e09c2",
                          "typeString": "literal_string \"BaconCoin: signature expired\""
                        }
                      ],
                      "id": 19772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6233:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6233:66:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19779,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:66:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19781,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19744,
                        "src": "6326:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19782,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19685,
                        "src": "6337:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19780,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19999,
                      "src": "6316:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:31:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 19697,
                  "id": 19784,
                  "nodeType": "Return",
                  "src": "6309:38:55"
                }
              ]
            },
            "documentation": {
              "id": 19683,
              "nodeType": "StructuredDocumentation",
              "src": "5173:412:55",
              "text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
            },
            "functionSelector": "c3cda520",
            "id": 19786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nameLocation": "5599:13:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19685,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "5621:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5613:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5613:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19687,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "5637:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5632:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5632:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19689,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "5649:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5644:11:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5644:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19691,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "5663:1:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5657:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 19690,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5657:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19693,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "5674:1:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5666:9:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19692,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5666:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19695,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "5685:1:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19786,
                  "src": "5677:9:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19694,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5677:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5612:75:55"
            },
            "returnParameters": {
              "id": 19697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5695:0:55"
            },
            "scope": 20180,
            "src": "5590:764:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19798,
              "nodeType": "Block",
              "src": "6540:56:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6567:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6567:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19795,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19789,
                        "src": "6579:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19792,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19999,
                      "src": "6557:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6557:32:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 19791,
                  "id": 19797,
                  "nodeType": "Return",
                  "src": "6550:39:55"
                }
              ]
            },
            "documentation": {
              "id": 19787,
              "nodeType": "StructuredDocumentation",
              "src": "6360:131:55",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
            },
            "functionSelector": "5c19a95c",
            "id": 19799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "6505:8:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19789,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "6522:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19799,
                  "src": "6514:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6514:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6513:19:55"
            },
            "returnParameters": {
              "id": 19791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6540:0:55"
            },
            "scope": 20180,
            "src": "6496:100:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19827,
              "nodeType": "Block",
              "src": "6864:162:55",
              "statements": [
                {
                  "assignments": [
                    19808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19808,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nameLocation": "6881:12:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19827,
                      "src": "6874:19:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 19807,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6874:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19812,
                  "initialValue": {
                    "baseExpression": {
                      "id": 19809,
                      "name": "numDelegateCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19445,
                      "src": "6896:22:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 19811,
                    "indexExpression": {
                      "id": 19810,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19802,
                      "src": "6919:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6896:31:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6874:53:55"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 19815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 19813,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19808,
                        "src": "6944:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 19814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6959:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6944:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 19824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7018:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 19825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6944:75:55",
                    "trueExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 19816,
                            "name": "delegateCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19440,
                            "src": "6963:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                            }
                          },
                          "id": 19818,
                          "indexExpression": {
                            "id": 19817,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19802,
                            "src": "6983:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6963:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                            "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                          }
                        },
                        "id": 19822,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 19821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 19819,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19808,
                            "src": "6992:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 19820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7007:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6992:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6963:46:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                          "typeString": "struct BaconCoin3.Checkpoint storage ref"
                        }
                      },
                      "id": 19823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19403,
                      "src": "6963:52:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19806,
                  "id": 19826,
                  "nodeType": "Return",
                  "src": "6937:82:55"
                }
              ]
            },
            "documentation": {
              "id": 19800,
              "nodeType": "StructuredDocumentation",
              "src": "6602:183:55",
              "text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
            },
            "functionSelector": "b4b5ea57",
            "id": 19828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nameLocation": "6799:15:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19802,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6823:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19828,
                  "src": "6815:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6815:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6814:17:55"
            },
            "returnParameters": {
              "id": 19806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19828,
                  "src": "6855:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6855:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6854:9:55"
            },
            "scope": 20180,
            "src": "6790:236:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19960,
              "nodeType": "Block",
              "src": "7530:1137:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19839,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19833,
                          "src": "7548:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 19840,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "7562:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "7562:12:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7548:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a206e6f74207965742064657465726d696e6564",
                        "id": 19843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7576:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad9441820a3b82e07f1a9ae9e4955b824d23f4750c14cba50152dba6ba92fad5",
                          "typeString": "literal_string \"BaconCoin: not yet determined\""
                        },
                        "value": "BaconCoin: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad9441820a3b82e07f1a9ae9e4955b824d23f4750c14cba50152dba6ba92fad5",
                          "typeString": "literal_string \"BaconCoin: not yet determined\""
                        }
                      ],
                      "id": 19838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7540:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7540:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19845,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:68:55"
                },
                {
                  "assignments": [
                    19847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19847,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nameLocation": "7626:12:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19960,
                      "src": "7619:19:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 19846,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7619:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19851,
                  "initialValue": {
                    "baseExpression": {
                      "id": 19848,
                      "name": "numDelegateCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19445,
                      "src": "7641:22:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 19850,
                    "indexExpression": {
                      "id": 19849,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19831,
                      "src": "7664:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7641:31:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7619:53:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 19854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 19852,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19847,
                      "src": "7686:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 19853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7702:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7686:17:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19858,
                  "nodeType": "IfStatement",
                  "src": "7682:56:55",
                  "trueBody": {
                    "id": 19857,
                    "nodeType": "Block",
                    "src": "7705:33:55",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 19855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7726:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 19837,
                        "id": 19856,
                        "nodeType": "Return",
                        "src": "7719:8:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 19859,
                            "name": "delegateCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19440,
                            "src": "7795:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                            }
                          },
                          "id": 19861,
                          "indexExpression": {
                            "id": 19860,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19831,
                            "src": "7815:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7795:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                            "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                          }
                        },
                        "id": 19865,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 19864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 19862,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19847,
                            "src": "7824:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 19863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7839:1:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7824:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7795:46:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                          "typeString": "struct BaconCoin3.Checkpoint storage ref"
                        }
                      },
                      "id": 19866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19401,
                      "src": "7795:56:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 19867,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19833,
                      "src": "7855:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7795:71:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19879,
                  "nodeType": "IfStatement",
                  "src": "7791:161:55",
                  "trueBody": {
                    "id": 19878,
                    "nodeType": "Block",
                    "src": "7868:84:55",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 19869,
                                "name": "delegateCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19440,
                                "src": "7889:19:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                                }
                              },
                              "id": 19871,
                              "indexExpression": {
                                "id": 19870,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19831,
                                "src": "7909:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7889:28:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                                "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                              }
                            },
                            "id": 19875,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 19874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 19872,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19847,
                                "src": "7918:12:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 19873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7933:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7918:16:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7889:46:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                              "typeString": "struct BaconCoin3.Checkpoint storage ref"
                            }
                          },
                          "id": 19876,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19403,
                          "src": "7889:52:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 19837,
                        "id": 19877,
                        "nodeType": "Return",
                        "src": "7882:59:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 19880,
                            "name": "delegateCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19440,
                            "src": "8010:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                            }
                          },
                          "id": 19882,
                          "indexExpression": {
                            "id": 19881,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19831,
                            "src": "8030:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8010:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                            "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                          }
                        },
                        "id": 19884,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 19883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8039:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8010:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                          "typeString": "struct BaconCoin3.Checkpoint storage ref"
                        }
                      },
                      "id": 19885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19401,
                      "src": "8010:41:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 19886,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19833,
                      "src": "8054:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8010:55:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19891,
                  "nodeType": "IfStatement",
                  "src": "8006:94:55",
                  "trueBody": {
                    "id": 19890,
                    "nodeType": "Block",
                    "src": "8067:33:55",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 19888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8088:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 19837,
                        "id": 19889,
                        "nodeType": "Return",
                        "src": "8081:8:55"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    19893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19893,
                      "mutability": "mutable",
                      "name": "lower",
                      "nameLocation": "8117:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19960,
                      "src": "8110:12:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 19892,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8110:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19895,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 19894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8125:1:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8110:16:55"
                },
                {
                  "assignments": [
                    19897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19897,
                      "mutability": "mutable",
                      "name": "upper",
                      "nameLocation": "8143:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19960,
                      "src": "8136:12:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 19896,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8136:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19901,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 19900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 19898,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19847,
                      "src": "8151:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 19899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8166:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8151:16:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8136:31:55"
                },
                {
                  "body": {
                    "id": 19951,
                    "nodeType": "Block",
                    "src": "8199:404:55",
                    "statements": [
                      {
                        "assignments": [
                          19906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 19906,
                            "mutability": "mutable",
                            "name": "center",
                            "nameLocation": "8220:6:55",
                            "nodeType": "VariableDeclaration",
                            "scope": 19951,
                            "src": "8213:13:55",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 19905,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8213:6:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 19915,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 19914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 19907,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19897,
                            "src": "8229:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 19913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 19910,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 19908,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19897,
                                    "src": "8238:5:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 19909,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19893,
                                    "src": "8246:5:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8238:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 19911,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8237:15:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 19912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8255:1:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "8237:19:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8229:27:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8213:43:55"
                      },
                      {
                        "assignments": [
                          19918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 19918,
                            "mutability": "mutable",
                            "name": "cp",
                            "nameLocation": "8315:2:55",
                            "nodeType": "VariableDeclaration",
                            "scope": 19951,
                            "src": "8297:20:55",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$19404_memory_ptr",
                              "typeString": "struct BaconCoin3.Checkpoint"
                            },
                            "typeName": {
                              "id": 19917,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19916,
                                "name": "Checkpoint",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 19404,
                                "src": "8297:10:55"
                              },
                              "referencedDeclaration": 19404,
                              "src": "8297:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$19404_storage_ptr",
                                "typeString": "struct BaconCoin3.Checkpoint"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 19924,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 19919,
                              "name": "delegateCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19440,
                              "src": "8320:19:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                              }
                            },
                            "id": 19921,
                            "indexExpression": {
                              "id": 19920,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19831,
                              "src": "8340:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8320:28:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                              "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                            }
                          },
                          "id": 19923,
                          "indexExpression": {
                            "id": 19922,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19906,
                            "src": "8349:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8320:36:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                            "typeString": "struct BaconCoin3.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8297:59:55"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 19928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 19925,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19918,
                              "src": "8374:2:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$19404_memory_ptr",
                                "typeString": "struct BaconCoin3.Checkpoint memory"
                              }
                            },
                            "id": 19926,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19401,
                            "src": "8374:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 19927,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19833,
                            "src": "8390:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8374:27:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19933,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19918,
                                "src": "8461:2:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$19404_memory_ptr",
                                  "typeString": "struct BaconCoin3.Checkpoint memory"
                                }
                              },
                              "id": 19934,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19401,
                              "src": "8461:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 19935,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19833,
                              "src": "8476:11:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8461:26:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 19948,
                            "nodeType": "Block",
                            "src": "8542:51:55",
                            "statements": [
                              {
                                "expression": {
                                  "id": 19946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 19942,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19897,
                                    "src": "8560:5:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 19945,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 19943,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19906,
                                      "src": "8568:6:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 19944,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8577:1:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "8568:10:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8560:18:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 19947,
                                "nodeType": "ExpressionStatement",
                                "src": "8560:18:55"
                              }
                            ]
                          },
                          "id": 19949,
                          "nodeType": "IfStatement",
                          "src": "8457:136:55",
                          "trueBody": {
                            "id": 19941,
                            "nodeType": "Block",
                            "src": "8489:47:55",
                            "statements": [
                              {
                                "expression": {
                                  "id": 19939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 19937,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19893,
                                    "src": "8507:5:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 19938,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19906,
                                    "src": "8515:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8507:14:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 19940,
                                "nodeType": "ExpressionStatement",
                                "src": "8507:14:55"
                              }
                            ]
                          }
                        },
                        "id": 19950,
                        "nodeType": "IfStatement",
                        "src": "8370:223:55",
                        "trueBody": {
                          "id": 19932,
                          "nodeType": "Block",
                          "src": "8403:48:55",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 19929,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19918,
                                  "src": "8428:2:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$19404_memory_ptr",
                                    "typeString": "struct BaconCoin3.Checkpoint memory"
                                  }
                                },
                                "id": 19930,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19403,
                                "src": "8428:8:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 19837,
                              "id": 19931,
                              "nodeType": "Return",
                              "src": "8421:15:55"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 19904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 19902,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19897,
                      "src": "8184:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 19903,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19893,
                      "src": "8192:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8184:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19952,
                  "nodeType": "WhileStatement",
                  "src": "8177:426:55"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19953,
                          "name": "delegateCheckpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19440,
                          "src": "8619:19:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                          }
                        },
                        "id": 19955,
                        "indexExpression": {
                          "id": 19954,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19831,
                          "src": "8639:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8619:28:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                          "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                        }
                      },
                      "id": 19957,
                      "indexExpression": {
                        "id": 19956,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "8648:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8619:35:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                        "typeString": "struct BaconCoin3.Checkpoint storage ref"
                      }
                    },
                    "id": 19958,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19403,
                    "src": "8619:41:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19837,
                  "id": 19959,
                  "nodeType": "Return",
                  "src": "8612:48:55"
                }
              ]
            },
            "documentation": {
              "id": 19829,
              "nodeType": "StructuredDocumentation",
              "src": "7032:405:55",
              "text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
            },
            "functionSelector": "782d6fe1",
            "id": 19961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nameLocation": "7451:13:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19831,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7473:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19961,
                  "src": "7465:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7465:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19833,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "7487:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19961,
                  "src": "7482:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19832,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7482:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7464:35:55"
            },
            "returnParameters": {
              "id": 19837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19961,
                  "src": "7521:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7521:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7520:9:55"
            },
            "scope": 20180,
            "src": "7442:1225:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19998,
              "nodeType": "Block",
              "src": "8739:303:55",
              "statements": [
                {
                  "assignments": [
                    19969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19969,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nameLocation": "8757:15:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19998,
                      "src": "8749:23:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19968,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8749:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19973,
                  "initialValue": {
                    "baseExpression": {
                      "id": 19970,
                      "name": "delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19409,
                      "src": "8775:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 19972,
                    "indexExpression": {
                      "id": 19971,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19963,
                      "src": "8785:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8775:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8749:46:55"
                },
                {
                  "assignments": [
                    19975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19975,
                      "mutability": "mutable",
                      "name": "delegatorBalance",
                      "nameLocation": "8813:16:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 19998,
                      "src": "8805:24:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19974,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8805:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19979,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 19977,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19963,
                        "src": "8842:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19976,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21335,
                      "src": "8832:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 19978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8832:20:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8805:47:55"
                },
                {
                  "expression": {
                    "id": 19984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19980,
                        "name": "delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19409,
                        "src": "8862:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 19982,
                      "indexExpression": {
                        "id": 19981,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19963,
                        "src": "8872:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8862:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19983,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19965,
                      "src": "8885:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8862:32:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19985,
                  "nodeType": "ExpressionStatement",
                  "src": "8862:32:55"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 19987,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19963,
                        "src": "8926:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19988,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19969,
                        "src": "8937:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19989,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19965,
                        "src": "8954:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19986,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19454,
                      "src": "8910:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 19990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8910:54:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19991,
                  "nodeType": "EmitStatement",
                  "src": "8905:59:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19993,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19969,
                        "src": "8990:15:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19994,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19965,
                        "src": "9007:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19995,
                        "name": "delegatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19975,
                        "src": "9018:16:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19992,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20106,
                      "src": "8975:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 19996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8975:60:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19997,
                  "nodeType": "ExpressionStatement",
                  "src": "8975:60:55"
                }
              ]
            },
            "id": 19999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nameLocation": "8682:9:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19963,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nameLocation": "8700:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19999,
                  "src": "8692:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8692:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19965,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8719:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 19999,
                  "src": "8711:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8711:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8691:38:55"
            },
            "returnParameters": {
              "id": 19967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8739:0:55"
            },
            "scope": 20180,
            "src": "8673:369:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20105,
              "nodeType": "Block",
              "src": "9129:786:55",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 20014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 20010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20008,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20001,
                        "src": "9143:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 20009,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20003,
                        "src": "9153:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9143:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 20013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20011,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20005,
                        "src": "9163:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 20012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9172:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9163:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9143:30:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20104,
                  "nodeType": "IfStatement",
                  "src": "9139:770:55",
                  "trueBody": {
                    "id": 20103,
                    "nodeType": "Block",
                    "src": "9175:734:55",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 20020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 20015,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20001,
                            "src": "9193:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 20018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9211:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 20017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9203:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20016,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9203:7:55",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 20019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9203:10:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9193:20:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 20058,
                        "nodeType": "IfStatement",
                        "src": "9189:348:55",
                        "trueBody": {
                          "id": 20057,
                          "nodeType": "Block",
                          "src": "9215:322:55",
                          "statements": [
                            {
                              "assignments": [
                                20022
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20022,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nameLocation": "9240:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20057,
                                  "src": "9233:16:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 20021,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9233:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20026,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 20023,
                                  "name": "numDelegateCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19445,
                                  "src": "9252:22:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 20025,
                                "indexExpression": {
                                  "id": 20024,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20001,
                                  "src": "9275:6:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9252:30:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9233:49:55"
                            },
                            {
                              "assignments": [
                                20028
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20028,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nameLocation": "9308:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20057,
                                  "src": "9300:17:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20027,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9300:7:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20042,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 20031,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 20029,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20022,
                                    "src": "9320:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 20030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9332:1:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9320:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "30",
                                  "id": 20040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9387:1:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 20041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9320:68:55",
                                "trueExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 20032,
                                        "name": "delegateCheckpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19440,
                                        "src": "9336:19:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 20034,
                                      "indexExpression": {
                                        "id": 20033,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20001,
                                        "src": "9356:6:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9336:27:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                                        "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 20038,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 20037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 20035,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20022,
                                        "src": "9364:9:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 20036,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9376:1:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9364:13:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9336:42:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                                      "typeString": "struct BaconCoin3.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 20039,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19403,
                                  "src": "9336:48:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9300:88:55"
                            },
                            {
                              "assignments": [
                                20044
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20044,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nameLocation": "9414:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20057,
                                  "src": "9406:17:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20043,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9406:7:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20049,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 20047,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20005,
                                    "src": "9440:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 20045,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20028,
                                    "src": "9426:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 20046,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16615,
                                  "src": "9426:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 20048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9426:21:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9406:41:55"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 20051,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20001,
                                    "src": "9482:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 20052,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20022,
                                    "src": "9490:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "id": 20053,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20028,
                                    "src": "9501:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 20054,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20044,
                                    "src": "9512:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20050,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20179,
                                  "src": "9465:16:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 20055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9465:57:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20056,
                              "nodeType": "ExpressionStatement",
                              "src": "9465:57:55"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 20064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 20059,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20003,
                            "src": "9555:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 20062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9573:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 20061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9565:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20060,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9565:7:55",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 20063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9565:10:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9555:20:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 20102,
                        "nodeType": "IfStatement",
                        "src": "9551:348:55",
                        "trueBody": {
                          "id": 20101,
                          "nodeType": "Block",
                          "src": "9577:322:55",
                          "statements": [
                            {
                              "assignments": [
                                20066
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20066,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nameLocation": "9602:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20101,
                                  "src": "9595:16:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 20065,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9595:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20070,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 20067,
                                  "name": "numDelegateCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19445,
                                  "src": "9614:22:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 20069,
                                "indexExpression": {
                                  "id": 20068,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20003,
                                  "src": "9637:6:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9614:30:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9595:49:55"
                            },
                            {
                              "assignments": [
                                20072
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20072,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nameLocation": "9670:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20101,
                                  "src": "9662:17:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20071,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9662:7:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20086,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 20075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 20073,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20066,
                                    "src": "9682:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 20074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9694:1:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9682:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "30",
                                  "id": 20084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9749:1:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 20085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9682:68:55",
                                "trueExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 20076,
                                        "name": "delegateCheckpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 19440,
                                        "src": "9698:19:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 20078,
                                      "indexExpression": {
                                        "id": 20077,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20003,
                                        "src": "9718:6:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9698:27:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                                        "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 20082,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 20081,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 20079,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20066,
                                        "src": "9726:9:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 20080,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9738:1:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9726:13:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9698:42:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                                      "typeString": "struct BaconCoin3.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 20083,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19403,
                                  "src": "9698:48:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9662:88:55"
                            },
                            {
                              "assignments": [
                                20088
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 20088,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nameLocation": "9776:9:55",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 20101,
                                  "src": "9768:17:55",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 20087,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9768:7:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 20093,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 20091,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20005,
                                    "src": "9802:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 20089,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20072,
                                    "src": "9788:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 20090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16600,
                                  "src": "9788:13:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 20092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9788:21:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9768:41:55"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 20095,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20003,
                                    "src": "9844:6:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 20096,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20066,
                                    "src": "9852:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "id": 20097,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20072,
                                    "src": "9863:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 20098,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20088,
                                    "src": "9874:9:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 20094,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20179,
                                  "src": "9827:16:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 20099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9827:57:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 20100,
                              "nodeType": "ExpressionStatement",
                              "src": "9827:57:55"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 20106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nameLocation": "9057:14:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20001,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nameLocation": "9080:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20106,
                  "src": "9072:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20003,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nameLocation": "9096:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20106,
                  "src": "9088:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9088:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20005,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9112:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20106,
                  "src": "9104:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9104:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9071:48:55"
            },
            "returnParameters": {
              "id": 20007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9129:0:55"
            },
            "scope": 20180,
            "src": "9048:867:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 20178,
              "nodeType": "Block",
              "src": "10032:528:55",
              "statements": [
                {
                  "assignments": [
                    20118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20118,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nameLocation": "10047:11:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 20178,
                      "src": "10040:18:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 20117,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10040:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20124,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20120,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "10068:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 20121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "10068:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 20122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10082:41:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7e548f792d7078ad7aa82e365440e53651d0b40b07104a8c34e2db2f9c5fc11",
                          "typeString": "literal_string \"BaconCoin: block number exceeds 32 bits\""
                        },
                        "value": "BaconCoin: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7e548f792d7078ad7aa82e365440e53651d0b40b07104a8c34e2db2f9c5fc11",
                          "typeString": "literal_string \"BaconCoin: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 20119,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19670,
                      "src": "10061:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 20123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10061:63:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10040:84:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 20138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 20127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20125,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20110,
                        "src": "10137:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 20126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10152:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10137:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 20137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 20128,
                              "name": "delegateCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19440,
                              "src": "10157:19:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                              }
                            },
                            "id": 20130,
                            "indexExpression": {
                              "id": 20129,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20108,
                              "src": "10177:9:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10157:30:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                              "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                            }
                          },
                          "id": 20134,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 20133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 20131,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20110,
                              "src": "10188:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 20132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10203:1:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10188:16:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10157:48:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                            "typeString": "struct BaconCoin3.Checkpoint storage ref"
                          }
                        },
                        "id": 20135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19401,
                        "src": "10157:58:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 20136,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20118,
                        "src": "10219:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "10157:73:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10137:93:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 20170,
                    "nodeType": "Block",
                    "src": "10324:165:55",
                    "statements": [
                      {
                        "expression": {
                          "id": 20160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 20151,
                                "name": "delegateCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19440,
                                "src": "10336:19:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                                }
                              },
                              "id": 20154,
                              "indexExpression": {
                                "id": 20152,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20108,
                                "src": "10356:9:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10336:30:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                                "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                              }
                            },
                            "id": 20155,
                            "indexExpression": {
                              "id": 20153,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20110,
                              "src": "10367:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10336:44:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                              "typeString": "struct BaconCoin3.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 20157,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20118,
                                "src": "10394:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 20158,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20114,
                                "src": "10407:8:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 20156,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19404,
                              "src": "10383:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$19404_storage_ptr_$",
                                "typeString": "type(struct BaconCoin3.Checkpoint storage pointer)"
                              }
                            },
                            "id": 20159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10383:33:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$19404_memory_ptr",
                              "typeString": "struct BaconCoin3.Checkpoint memory"
                            }
                          },
                          "src": "10336:80:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                            "typeString": "struct BaconCoin3.Checkpoint storage ref"
                          }
                        },
                        "id": 20161,
                        "nodeType": "ExpressionStatement",
                        "src": "10336:80:55"
                      },
                      {
                        "expression": {
                          "id": 20168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 20162,
                              "name": "numDelegateCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19445,
                              "src": "10428:22:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 20164,
                            "indexExpression": {
                              "id": 20163,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20108,
                              "src": "10451:9:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10428:33:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 20167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 20165,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20110,
                              "src": "10464:12:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 20166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10479:1:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10464:16:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10428:52:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 20169,
                        "nodeType": "ExpressionStatement",
                        "src": "10428:52:55"
                      }
                    ]
                  },
                  "id": 20171,
                  "nodeType": "IfStatement",
                  "src": "10133:356:55",
                  "trueBody": {
                    "id": 20150,
                    "nodeType": "Block",
                    "src": "10232:86:55",
                    "statements": [
                      {
                        "expression": {
                          "id": 20148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 20139,
                                  "name": "delegateCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19440,
                                  "src": "10244:19:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct BaconCoin3.Checkpoint storage ref))"
                                  }
                                },
                                "id": 20144,
                                "indexExpression": {
                                  "id": 20140,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20108,
                                  "src": "10264:9:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10244:30:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$19404_storage_$",
                                  "typeString": "mapping(uint32 => struct BaconCoin3.Checkpoint storage ref)"
                                }
                              },
                              "id": 20145,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 20143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 20141,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20110,
                                  "src": "10275:12:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 20142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10290:1:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10275:16:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10244:48:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$19404_storage",
                                "typeString": "struct BaconCoin3.Checkpoint storage ref"
                              }
                            },
                            "id": 20146,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19403,
                            "src": "10244:54:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 20147,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20114,
                            "src": "10301:8:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10244:65:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20149,
                        "nodeType": "ExpressionStatement",
                        "src": "10244:65:55"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20173,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20108,
                        "src": "10523:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20174,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20112,
                        "src": "10534:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20175,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20114,
                        "src": "10544:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20172,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19463,
                      "src": "10502:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 20176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10502:51:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20177,
                  "nodeType": "EmitStatement",
                  "src": "10497:56:55"
                }
              ]
            },
            "id": 20179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nameLocation": "9930:16:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20108,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "9955:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20179,
                  "src": "9947:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9947:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20110,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nameLocation": "9973:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20179,
                  "src": "9966:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 20109,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9966:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20112,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nameLocation": "9995:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20179,
                  "src": "9987:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9987:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20114,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nameLocation": "10013:8:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 20179,
                  "src": "10005:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10005:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9946:76:55"
            },
            "returnParameters": {
              "id": 20116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10032:0:55"
            },
            "scope": 20180,
            "src": "9921:639:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 20181,
        "src": "317:10245:55",
        "usedErrors": []
      }
    ],
    "src": "32:10530:55"
  },
  "bytecode": "0x608060405234801561001057600080fd5b50611dcf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a9059cbb116100a2578063e395715511610071578063e3957155146104ce578063e7a324dc146104e1578063f1127ed814610508578063fe9d93031461054357600080fd5b8063a9059cbb1461045c578063b4b5ea571461046f578063c3cda52014610482578063dd62ed3e1461049557600080fd5b806395d89b41116100de57806395d89b41146104085780639dd373b914610410578063a11c474114610423578063a457c2d71461044957600080fd5b806370a08231146103ac578063782d6fe1146103d55780637ecebe00146103e857600080fd5b8063395093511161017157806354fd4d501161014b57806354fd4d5014610316578063587cde1e1461031d5780635c19a95c1461035e5780636fcfff451461037157600080fd5b8063395093511461029757806340c10f19146102aa578063509c3ef0146102bf57600080fd5b806320606b70116101ad57806320606b701461022757806323b872dd1461024e57806330adf81f14610261578063313ce5671461028857600080fd5b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610215575b600080fd5b6101dc610556565b6040516101e991906119a5565b60405180910390f35b610205610200366004611a16565b6105e8565b60405190151581526020016101e9565b6034545b6040519081526020016101e9565b6102197f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b61020561025c366004611a40565b6105ff565b6102197f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051601281526020016101e9565b6102056102a5366004611a16565b610651565b6102bd6102b8366004611a16565b61068d565b005b6102fa6102cd366004611a7c565b606b6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101e9565b6003610219565b61034661032b366004611abc565b6069602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102bd61036c366004611abc565b610734565b61039761037f366004611abc565b60686020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101e9565b6102196103ba366004611abc565b6001600160a01b031660009081526033602052604090205490565b6102196103e3366004611a16565b610741565b6102196103f6366004611abc565b606a6020526000908152604090205481565b6101dc610996565b6102bd61041e366004611abc565b6109a5565b610397610431366004611abc565b606c6020526000908152604090205463ffffffff1681565b610205610457366004611a16565b610a39565b61020561046a366004611a16565b610ae0565b61021961047d366004611abc565b610b26565b6102bd610490366004611ad7565b610b9b565b6102196104a3366004611b37565b6001600160a01b039182166000908152603b6020908152604080832093909416825291909152205490565b6102bd6104dc366004611abc565b610e5b565b6102197fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6102fa610516366004611a7c565b60676020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6102bd610551366004611b80565b610ef0565b60606035805461056590611c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461059190611c3b565b80156105de5780601f106105b3576101008083540402835291602001916105de565b820191906000526020600020905b8154815290600101906020018083116105c157829003601f168201915b5050505050905090565b60006105f5338484610f20565b5060015b92915050565b600061060c848484611078565b61061557600080fd5b6001600160a01b0380851660009081526069602052604080822054868416835291205461064792918216911684611137565b5060019392505050565b336000818152603b602090815260408083206001600160a01b038716845290915281205490916105f5918590610688908690611c8c565b610f20565b6065546001600160a01b03163314806106b057506066546001600160a01b031633145b6107015760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d696e742073656e6465720000000000000000000000000060448201526064015b60405180910390fd5b61070b828261129b565b6001600160a01b03808316600090815260696020526040812054610730921683611137565b5050565b61073e338261137a565b50565b60004382106107925760405162461bcd60e51b815260206004820152601d60248201527f4261636f6e436f696e3a206e6f74207965742064657465726d696e656400000060448201526064016106f8565b6001600160a01b0383166000908152606c602052604090205463ffffffff16806107c05760009150506105f9565b6001600160a01b0384166000908152606b6020526040812084916107e5600185611ca4565b63ffffffff9081168252602082019290925260400160002054161161084e576001600160a01b0384166000908152606b6020526040812090610828600184611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101549150506105f9565b6001600160a01b0384166000908152606b6020908152604080832083805290915290205463ffffffff168310156108895760009150506105f9565b600080610897600184611ca4565b90505b8163ffffffff168163ffffffff16111561095f57600060026108bc8484611ca4565b6108c69190611cc9565b6108d09083611ca4565b6001600160a01b0388166000908152606b6020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152919250871415610933576020015194506105f99350505050565b805163ffffffff1687111561094a57819350610958565b610955600183611ca4565b92505b505061089a565b506001600160a01b0385166000908152606b6020908152604080832063ffffffff9094168352929052206001015491505092915050565b60606036805461056590611c3b565b6065546001600160a01b031633146109ff5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642073656e64657200000000000000000000000000000000000060448201526064016106f8565b606580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b336000908152603b602090815260408083206001600160a01b038616845290915281205482811015610ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106f8565b6106473385858403610f20565b6000610aec8383611412565b610af557600080fd5b33600090815260696020526040808220546001600160a01b03868116845291909220546105f5928216911684611137565b6001600160a01b0381166000908152606c602052604081205463ffffffff1680610b51576000610b94565b6001600160a01b0383166000908152606b6020526040812090610b75600184611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610bc6610556565b80519060200120610bd44690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401909252815191909301207f1901000000000000000000000000000000000000000000000000000000000000610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610d1b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d7e5760405162461bcd60e51b815260206004820152601c60248201527f4261636f6e436f696e3a20696e76616c6964207369676e61747572650000000060448201526064016106f8565b6001600160a01b0381166000908152606a60205260408120805491610da283611cfa565b919050558914610df45760405162461bcd60e51b815260206004820152601860248201527f4261636f6e436f696e3a20696e76616c6964206e6f6e6365000000000000000060448201526064016106f8565b87421115610e445760405162461bcd60e51b815260206004820152601c60248201527f4261636f6e436f696e3a207369676e617475726520657870697265640000000060448201526064016106f8565b610e4e818b61137a565b505050505b505050505050565b73602eb5180ce24240cf40f8be124cc4d3a289068633148015610e7e5750466004145b6109ff5760405162461bcd60e51b815260206004820152602260248201527f4261636f6e436f696e3a20496e76616c69642073656e646572206f722063686160448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b610efa338361141f565b33600090815260696020526040812054610730916001600160a01b039091169084611137565b6001600160a01b038316610f9b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0382166110175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b038381166000818152603b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110858484846115a4565b6001600160a01b0384166000908152603b602090815260408083203384529091529020548281101561111f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106f8565b61112c8533858403610f20565b506001949350505050565b816001600160a01b0316836001600160a01b0316141580156111595750600081115b15611296576001600160a01b038316156111fc576001600160a01b0383166000908152606c602052604081205463ffffffff1690816111995760006111dc565b6001600160a01b0385166000908152606b60205260408120906111bd600185611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006111ea82856117bb565b90506111f8868484846117c7565b5050505b6001600160a01b03821615611296576001600160a01b0382166000908152606c602052604081205463ffffffff16908161123757600061127a565b6001600160a01b0384166000908152606b602052604081209061125b600185611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006112888285611969565b9050610e53858484846117c7565b505050565b6001600160a01b0382166112f15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f8565b80603460008282546113039190611c8c565b90915550506001600160a01b03821660009081526033602052604081208054839290611330908490611c8c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03828116600081815260696020818152604080842080546033845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461140c828483611137565b50505050565b60006105f53384846115a4565b6001600160a01b03821661149b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0382166000908152603360205260409020548181101561152a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0383166000908152603360205260408120838303905560348054849290611559908490611d33565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0383166116205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b03821661169c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0383166000908152603360205260409020548181101561172b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611762908490611c8c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ae91815260200190565b60405180910390a361140c565b6000610b948284611d33565b60006117eb43604051806060016040528060278152602001611d7360279139611975565b905060008463ffffffff1611801561184557506001600160a01b0385166000908152606b6020526040812063ffffffff831691611829600188611ca4565b63ffffffff908116825260208201929092526040016000205416145b1561188e576001600160a01b0385166000908152606b60205260408120839161186f600188611ca4565b63ffffffff16815260208101919091526040016000206001015561191e565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152606b83528581208a851682529092529390209151825463ffffffff1916911617815590516001918201556118ed908590611d4a565b6001600160a01b0386166000908152606c60205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b6000610b948284611c8c565b600081640100000000841061199d5760405162461bcd60e51b81526004016106f891906119a5565b509192915050565b600060208083528351808285015260005b818110156119d2578581018301518582016040015282016119b6565b818111156119e4576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611a1157600080fd5b919050565b60008060408385031215611a2957600080fd5b611a32836119fa565b946020939093013593505050565b600080600060608486031215611a5557600080fd5b611a5e846119fa565b9250611a6c602085016119fa565b9150604084013590509250925092565b60008060408385031215611a8f57600080fd5b611a98836119fa565b9150602083013563ffffffff81168114611ab157600080fd5b809150509250929050565b600060208284031215611ace57600080fd5b610b94826119fa565b60008060008060008060c08789031215611af057600080fd5b611af9876119fa565b95506020870135945060408701359350606087013560ff81168114611b1d57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611b4a57600080fd5b611b53836119fa565b9150611b61602084016119fa565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611b9357600080fd5b82359150602083013567ffffffffffffffff80821115611bb257600080fd5b818501915085601f830112611bc657600080fd5b813581811115611bd857611bd8611b6a565b604051601f8201601f19908116603f01168101908382118183101715611c0057611c00611b6a565b81604052828152886020848701011115611c1957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c90821680611c4f57607f821691505b60208210811415611c7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c9f57611c9f611c76565b500190565b600063ffffffff83811690831681811015611cc157611cc1611c76565b039392505050565b600063ffffffff80841680611cee57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d2c57611d2c611c76565b5060010190565b600082821015611d4557611d45611c76565b500390565b600063ffffffff808316818516808303821115611d6957611d69611c76565b0194935050505056fe4261636f6e436f696e3a20626c6f636b206e756d62657220657863656564732033322062697473a26469706673582212207e7f64e454d014d2d43001c76d6412017764eb76b1c317bbf3d15e7109b69cbd64736f6c63430008090033",
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "contractName": "BaconCoin3",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a9059cbb116100a2578063e395715511610071578063e3957155146104ce578063e7a324dc146104e1578063f1127ed814610508578063fe9d93031461054357600080fd5b8063a9059cbb1461045c578063b4b5ea571461046f578063c3cda52014610482578063dd62ed3e1461049557600080fd5b806395d89b41116100de57806395d89b41146104085780639dd373b914610410578063a11c474114610423578063a457c2d71461044957600080fd5b806370a08231146103ac578063782d6fe1146103d55780637ecebe00146103e857600080fd5b8063395093511161017157806354fd4d501161014b57806354fd4d5014610316578063587cde1e1461031d5780635c19a95c1461035e5780636fcfff451461037157600080fd5b8063395093511461029757806340c10f19146102aa578063509c3ef0146102bf57600080fd5b806320606b70116101ad57806320606b701461022757806323b872dd1461024e57806330adf81f14610261578063313ce5671461028857600080fd5b806306fdde03146101d4578063095ea7b3146101f257806318160ddd14610215575b600080fd5b6101dc610556565b6040516101e991906119a5565b60405180910390f35b610205610200366004611a16565b6105e8565b60405190151581526020016101e9565b6034545b6040519081526020016101e9565b6102197f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b61020561025c366004611a40565b6105ff565b6102197f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051601281526020016101e9565b6102056102a5366004611a16565b610651565b6102bd6102b8366004611a16565b61068d565b005b6102fa6102cd366004611a7c565b606b6020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101e9565b6003610219565b61034661032b366004611abc565b6069602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102bd61036c366004611abc565b610734565b61039761037f366004611abc565b60686020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101e9565b6102196103ba366004611abc565b6001600160a01b031660009081526033602052604090205490565b6102196103e3366004611a16565b610741565b6102196103f6366004611abc565b606a6020526000908152604090205481565b6101dc610996565b6102bd61041e366004611abc565b6109a5565b610397610431366004611abc565b606c6020526000908152604090205463ffffffff1681565b610205610457366004611a16565b610a39565b61020561046a366004611a16565b610ae0565b61021961047d366004611abc565b610b26565b6102bd610490366004611ad7565b610b9b565b6102196104a3366004611b37565b6001600160a01b039182166000908152603b6020908152604080832093909416825291909152205490565b6102bd6104dc366004611abc565b610e5b565b6102197fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6102fa610516366004611a7c565b60676020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6102bd610551366004611b80565b610ef0565b60606035805461056590611c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461059190611c3b565b80156105de5780601f106105b3576101008083540402835291602001916105de565b820191906000526020600020905b8154815290600101906020018083116105c157829003601f168201915b5050505050905090565b60006105f5338484610f20565b5060015b92915050565b600061060c848484611078565b61061557600080fd5b6001600160a01b0380851660009081526069602052604080822054868416835291205461064792918216911684611137565b5060019392505050565b336000818152603b602090815260408083206001600160a01b038716845290915281205490916105f5918590610688908690611c8c565b610f20565b6065546001600160a01b03163314806106b057506066546001600160a01b031633145b6107015760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d696e742073656e6465720000000000000000000000000060448201526064015b60405180910390fd5b61070b828261129b565b6001600160a01b03808316600090815260696020526040812054610730921683611137565b5050565b61073e338261137a565b50565b60004382106107925760405162461bcd60e51b815260206004820152601d60248201527f4261636f6e436f696e3a206e6f74207965742064657465726d696e656400000060448201526064016106f8565b6001600160a01b0383166000908152606c602052604090205463ffffffff16806107c05760009150506105f9565b6001600160a01b0384166000908152606b6020526040812084916107e5600185611ca4565b63ffffffff9081168252602082019290925260400160002054161161084e576001600160a01b0384166000908152606b6020526040812090610828600184611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101549150506105f9565b6001600160a01b0384166000908152606b6020908152604080832083805290915290205463ffffffff168310156108895760009150506105f9565b600080610897600184611ca4565b90505b8163ffffffff168163ffffffff16111561095f57600060026108bc8484611ca4565b6108c69190611cc9565b6108d09083611ca4565b6001600160a01b0388166000908152606b6020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152919250871415610933576020015194506105f99350505050565b805163ffffffff1687111561094a57819350610958565b610955600183611ca4565b92505b505061089a565b506001600160a01b0385166000908152606b6020908152604080832063ffffffff9094168352929052206001015491505092915050565b60606036805461056590611c3b565b6065546001600160a01b031633146109ff5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642073656e64657200000000000000000000000000000000000060448201526064016106f8565b606580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b336000908152603b602090815260408083206001600160a01b038616845290915281205482811015610ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106f8565b6106473385858403610f20565b6000610aec8383611412565b610af557600080fd5b33600090815260696020526040808220546001600160a01b03868116845291909220546105f5928216911684611137565b6001600160a01b0381166000908152606c602052604081205463ffffffff1680610b51576000610b94565b6001600160a01b0383166000908152606b6020526040812090610b75600184611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610bc6610556565b80519060200120610bd44690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401909252815191909301207f1901000000000000000000000000000000000000000000000000000000000000610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610d1b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d7e5760405162461bcd60e51b815260206004820152601c60248201527f4261636f6e436f696e3a20696e76616c6964207369676e61747572650000000060448201526064016106f8565b6001600160a01b0381166000908152606a60205260408120805491610da283611cfa565b919050558914610df45760405162461bcd60e51b815260206004820152601860248201527f4261636f6e436f696e3a20696e76616c6964206e6f6e6365000000000000000060448201526064016106f8565b87421115610e445760405162461bcd60e51b815260206004820152601c60248201527f4261636f6e436f696e3a207369676e617475726520657870697265640000000060448201526064016106f8565b610e4e818b61137a565b505050505b505050505050565b73602eb5180ce24240cf40f8be124cc4d3a289068633148015610e7e5750466004145b6109ff5760405162461bcd60e51b815260206004820152602260248201527f4261636f6e436f696e3a20496e76616c69642073656e646572206f722063686160448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b610efa338361141f565b33600090815260696020526040812054610730916001600160a01b039091169084611137565b6001600160a01b038316610f9b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0382166110175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b038381166000818152603b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110858484846115a4565b6001600160a01b0384166000908152603b602090815260408083203384529091529020548281101561111f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106f8565b61112c8533858403610f20565b506001949350505050565b816001600160a01b0316836001600160a01b0316141580156111595750600081115b15611296576001600160a01b038316156111fc576001600160a01b0383166000908152606c602052604081205463ffffffff1690816111995760006111dc565b6001600160a01b0385166000908152606b60205260408120906111bd600185611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006111ea82856117bb565b90506111f8868484846117c7565b5050505b6001600160a01b03821615611296576001600160a01b0382166000908152606c602052604081205463ffffffff16908161123757600061127a565b6001600160a01b0384166000908152606b602052604081209061125b600185611ca4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006112888285611969565b9050610e53858484846117c7565b505050565b6001600160a01b0382166112f15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106f8565b80603460008282546113039190611c8c565b90915550506001600160a01b03821660009081526033602052604081208054839290611330908490611c8c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03828116600081815260696020818152604080842080546033845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461140c828483611137565b50505050565b60006105f53384846115a4565b6001600160a01b03821661149b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0382166000908152603360205260409020548181101561152a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0383166000908152603360205260408120838303905560348054849290611559908490611d33565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0383166116205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b03821661169c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b0383166000908152603360205260409020548181101561172b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106f8565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611762908490611c8c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ae91815260200190565b60405180910390a361140c565b6000610b948284611d33565b60006117eb43604051806060016040528060278152602001611d7360279139611975565b905060008463ffffffff1611801561184557506001600160a01b0385166000908152606b6020526040812063ffffffff831691611829600188611ca4565b63ffffffff908116825260208201929092526040016000205416145b1561188e576001600160a01b0385166000908152606b60205260408120839161186f600188611ca4565b63ffffffff16815260208101919091526040016000206001015561191e565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152606b83528581208a851682529092529390209151825463ffffffff1916911617815590516001918201556118ed908590611d4a565b6001600160a01b0386166000908152606c60205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b6000610b948284611c8c565b600081640100000000841061199d5760405162461bcd60e51b81526004016106f891906119a5565b509192915050565b600060208083528351808285015260005b818110156119d2578581018301518582016040015282016119b6565b818111156119e4576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611a1157600080fd5b919050565b60008060408385031215611a2957600080fd5b611a32836119fa565b946020939093013593505050565b600080600060608486031215611a5557600080fd5b611a5e846119fa565b9250611a6c602085016119fa565b9150604084013590509250925092565b60008060408385031215611a8f57600080fd5b611a98836119fa565b9150602083013563ffffffff81168114611ab157600080fd5b809150509250929050565b600060208284031215611ace57600080fd5b610b94826119fa565b60008060008060008060c08789031215611af057600080fd5b611af9876119fa565b95506020870135945060408701359350606087013560ff81168114611b1d57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611b4a57600080fd5b611b53836119fa565b9150611b61602084016119fa565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611b9357600080fd5b82359150602083013567ffffffffffffffff80821115611bb257600080fd5b818501915085601f830112611bc657600080fd5b813581811115611bd857611bd8611b6a565b604051601f8201601f19908116603f01168101908382118183101715611c0057611c00611b6a565b81604052828152886020848701011115611c1957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c90821680611c4f57607f821691505b60208210811415611c7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c9f57611c9f611c76565b500190565b600063ffffffff83811690831681811015611cc157611cc1611c76565b039392505050565b600063ffffffff80841680611cee57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d2c57611d2c611c76565b5060010190565b600082821015611d4557611d45611c76565b500390565b600063ffffffff808316818516808303821115611d6957611d69611c76565b0194935050505056fe4261636f6e436f696e3a20626c6f636b206e756d62657220657863656564732033322062697473a26469706673582212207e7f64e454d014d2d43001c76d6412017764eb76b1c317bbf3d15e7109b69cbd64736f6c63430008090033",
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16004:111",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:111",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:535:111",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:111",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:111"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:111"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:111"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:111"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:111"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:111"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:111",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:111"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:111"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:111"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:111"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:111",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:111"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:111"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:111"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:111"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:111"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:111"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:111"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:111"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:111"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:111"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:111"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:111"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:111"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:111",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:111",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:111"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:111"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:111"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:111"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:111",
                    "statements": []
                  },
                  "src": "294:140:111"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:111"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:111"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:111"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:111"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:111",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:111"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:111"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:111"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:111"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:121:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:111"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:111"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:111",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:111"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "591:66:111",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:88:111"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:104:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:113:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:111",
                "type": ""
              }
            ],
            "src": "14:656:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "724:147:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "734:29:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "756:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "743:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:20:111"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "734:5:111"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "849:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "858:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "861:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "851:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "851:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "851:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "785:5:111"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "796:5:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "803:42:111",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "792:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "792:54:111"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "782:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "782:65:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "775:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:73:111"
                  },
                  "nodeType": "YulIf",
                  "src": "772:93:111"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "703:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "714:5:111",
                "type": ""
              }
            ],
            "src": "675:196:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:167:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1009:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1018:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1021:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1011:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1011:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1011:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "984:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "993:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "980:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "980:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1005:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "976:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "973:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1063:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1044:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1082:42:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1109:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1120:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1105:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1105:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1092:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:32:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1082:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "921:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "932:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "944:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "952:6:111",
                "type": ""
              }
            ],
            "src": "876:254:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1230:92:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1240:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1252:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1248:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1248:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1240:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1282:9:111"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1307:6:111"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1300:6:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1300:14:111"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1293:6:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1293:22:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1275:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1275:41:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1275:41:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1199:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1210:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1221:4:111",
                "type": ""
              }
            ],
            "src": "1135:187:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1428:76:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1438:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1450:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1446:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1438:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1480:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1491:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1473:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1473:25:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1397:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1408:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1419:4:111",
                "type": ""
              }
            ],
            "src": "1327:177:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1610:76:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1620:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1632:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1643:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1628:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1620:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1662:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1673:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1655:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1655:25:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1579:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1590:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1601:4:111",
                "type": ""
              }
            ],
            "src": "1509:177:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1795:224:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1841:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1850:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1853:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1843:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1843:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1816:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1825:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1837:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1808:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1808:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "1805:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1866:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1895:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1876:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1866:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1914:48:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1947:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1943:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1943:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1924:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:38:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1914:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1971:42:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1998:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2009:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1994:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1981:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:32:111"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1745:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1756:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1768:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1776:6:111",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1784:6:111",
                "type": ""
              }
            ],
            "src": "1691:328:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2121:87:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2131:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2143:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2139:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2139:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2131:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2173:9:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2188:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2196:4:111",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:17:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:36:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:36:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2090:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2101:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2112:4:111",
                "type": ""
              }
            ],
            "src": "2024:184:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2299:264:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2345:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2354:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2357:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2347:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2347:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2347:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2320:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2329:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2316:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2316:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2341:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2312:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2312:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "2309:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2370:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2399:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2380:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2380:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2418:45:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2448:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2459:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2444:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2444:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2431:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:32:111"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2422:5:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2517:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2526:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2529:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2519:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2519:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2519:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2485:5:111"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2496:5:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2503:10:111",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2492:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2492:22:111"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2482:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:33:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2475:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:41:111"
                  },
                  "nodeType": "YulIf",
                  "src": "2472:61:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2542:15:111",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2552:5:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2542:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2257:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2268:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2280:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2288:6:111",
                "type": ""
              }
            ],
            "src": "2213:350:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2695:136:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2705:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2717:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2728:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2713:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2713:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2705:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2747:9:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2762:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2770:10:111",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2758:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2758:23:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:42:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2740:42:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2802:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2813:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2798:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2798:18:111"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2818:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2791:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2791:34:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32_t_uint256__to_t_uint32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2656:9:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2667:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2675:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2686:4:111",
                "type": ""
              }
            ],
            "src": "2568:263:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2906:116:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2952:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2961:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2964:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2954:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2954:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2954:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2927:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2936:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2923:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2923:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2948:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2919:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2919:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "2916:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2977:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3006:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2987:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2977:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2872:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2883:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2895:6:111",
                "type": ""
              }
            ],
            "src": "2836:186:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3128:125:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3138:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3150:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3161:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3146:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3138:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3180:9:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3195:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3203:42:111",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3191:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3191:55:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:74:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3173:74:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3097:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3108:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3119:4:111",
                "type": ""
              }
            ],
            "src": "3027:226:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3357:93:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3367:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3379:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3375:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3367:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3409:9:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3424:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3432:10:111",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3420:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3420:23:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3402:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3402:42:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3402:42:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3337:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3348:4:111",
                "type": ""
              }
            ],
            "src": "3258:192:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3608:465:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3655:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3664:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3667:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3657:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3657:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3657:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3629:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3638:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3625:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3625:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3650:3:111",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3621:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3621:33:111"
                  },
                  "nodeType": "YulIf",
                  "src": "3618:53:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3680:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3709:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3690:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3680:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3728:42:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3755:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3766:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3751:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3751:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3738:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:32:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3779:42:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3806:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3817:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3802:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3802:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3789:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:32:111"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3779:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3830:45:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3860:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3871:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3856:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3856:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3843:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3843:32:111"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3834:5:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3923:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3932:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3935:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3925:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3925:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3925:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3897:5:111"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3908:5:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3915:4:111",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3904:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3904:16:111"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3894:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3894:27:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3887:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:35:111"
                  },
                  "nodeType": "YulIf",
                  "src": "3884:55:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3948:15:111",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3958:5:111"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3948:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3972:43:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3999:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4010:3:111",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3995:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3995:19:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3982:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:33:111"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3972:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4024:43:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4051:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4062:3:111",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4047:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4047:19:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4034:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:33:111"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4024:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3534:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3545:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3557:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3565:6:111",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3573:6:111",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3581:6:111",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3589:6:111",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3597:6:111",
                "type": ""
              }
            ],
            "src": "3455:618:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4165:173:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4211:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4220:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4223:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4213:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4213:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4213:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4186:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4195:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4182:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4182:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4207:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4178:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4178:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "4175:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4236:39:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4265:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4246:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4246:29:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4236:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4284:48:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4317:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4328:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4313:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4313:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4294:18:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:38:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4284:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4123:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4134:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4146:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4154:6:111",
                "type": ""
              }
            ],
            "src": "4078:260:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4375:152:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4392:1:111",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4395:77:111",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4385:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4385:88:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4385:88:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:1:111",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:4:111",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4482:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4482:15:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4482:15:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:1:111",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4516:4:111",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4506:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:15:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4506:15:111"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4343:184:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4628:952:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4674:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4683:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4686:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4676:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4676:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4676:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4649:7:111"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4658:9:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4645:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4645:23:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4670:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4641:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4641:32:111"
                  },
                  "nodeType": "YulIf",
                  "src": "4638:52:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4699:33:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4722:9:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4709:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:23:111"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4699:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4741:46:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4772:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4783:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4768:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4768:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4755:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4755:32:111"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4745:6:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4796:28:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4806:18:111",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4800:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4851:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4860:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4863:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4853:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4853:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4853:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4839:6:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4847:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4836:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:14:111"
                  },
                  "nodeType": "YulIf",
                  "src": "4833:34:111"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4876:32:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4890:9:111"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4901:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4886:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4886:22:111"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4880:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4956:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4965:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4968:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4958:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4958:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4958:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4935:2:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4939:4:111",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4931:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4931:13:111"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4946:7:111"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4927:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4927:27:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4920:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4920:35:111"
                  },
                  "nodeType": "YulIf",
                  "src": "4917:55:111"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4981:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5004:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4991:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4991:16:111"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "4985:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5030:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5032:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5032:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5032:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5022:2:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5026:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5019:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:10:111"
                  },
                  "nodeType": "YulIf",
                  "src": "5016:36:111"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5061:76:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5071:66:111",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "5065:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5146:23:111",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5166:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5160:5:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5160:9:111"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "5150:6:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5178:71:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5200:6:111"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5224:2:111"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5228:4:111",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5220:3:111"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5220:13:111"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5235:2:111"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5216:3:111"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5216:22:111"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5240:2:111",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5212:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5212:31:111"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "5245:2:111"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5208:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5208:40:111"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5196:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5196:53:111"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5182:10:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5308:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5310:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5310:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5310:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5267:10:111"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5279:2:111"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5264:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5264:18:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5287:10:111"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5299:6:111"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5284:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5284:22:111"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5261:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:46:111"
                  },
                  "nodeType": "YulIf",
                  "src": "5258:72:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5346:2:111",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5350:10:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5339:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5339:22:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5339:22:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5377:6:111"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5385:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5370:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5370:18:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5370:18:111"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5434:16:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5443:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5446:1:111",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5436:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5436:12:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5436:12:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5411:2:111"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "5415:2:111"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5407:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5407:11:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5420:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5403:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5403:20:111"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5425:7:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5400:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:33:111"
                  },
                  "nodeType": "YulIf",
                  "src": "5397:53:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5476:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5484:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5472:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5472:15:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "5493:2:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5497:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5489:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5489:11:111"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5502:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5459:12:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5459:46:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5459:46:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5529:6:111"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "5537:2:111"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5525:3:111"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5525:15:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5542:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5521:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5521:24:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5547:1:111",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5514:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:35:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5514:35:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5558:16:111",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "5568:6:111"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5558:6:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4586:9:111",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4597:7:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4609:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4617:6:111",
                "type": ""
              }
            ],
            "src": "4532:1048:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5640:382:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5650:22:111",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5664:1:111",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5667:4:111"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "5660:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5660:12:111"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5650:6:111"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5681:38:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5711:4:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5717:1:111",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5707:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5707:12:111"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5685:18:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5758:31:111",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5760:27:111",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5774:6:111"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5782:4:111",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5770:3:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5770:17:111"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5760:6:111"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5738:18:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5731:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5731:26:111"
                  },
                  "nodeType": "YulIf",
                  "src": "5728:61:111"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5848:168:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5869:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5872:77:111",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5862:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5862:88:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5862:88:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5970:1:111",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5973:4:111",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5963:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5963:15:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5963:15:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5998:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6001:4:111",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5991:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5991:15:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5991:15:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5804:18:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5827:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5835:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5824:2:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5824:14:111"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5801:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:38:111"
                  },
                  "nodeType": "YulIf",
                  "src": "5798:218:111"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5620:4:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5629:6:111",
                "type": ""
              }
            ],
            "src": "5585:437:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6059:152:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6076:1:111",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6079:77:111",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6069:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:88:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6069:88:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6173:1:111",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6176:4:111",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6166:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:15:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6166:15:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6197:1:111",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6200:4:111",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6190:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6190:15:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6190:15:111"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6027:184:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6264:80:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6291:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6293:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6293:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6293:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6280:1:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6287:1:111"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6283:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6283:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6277:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6277:13:111"
                  },
                  "nodeType": "YulIf",
                  "src": "6274:39:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6322:16:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6333:1:111"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6336:1:111"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6329:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6329:9:111"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6322:3:111"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6247:1:111",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6250:1:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6256:3:111",
                "type": ""
              }
            ],
            "src": "6216:128:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6523:169:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6540:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6551:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6533:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6533:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6574:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6585:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6570:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6570:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6590:2:111",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6563:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6563:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6563:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6613:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6624:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6609:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6609:18:111"
                      },
                      {
                        "hexValue": "496e76616c6964206d696e742073656e646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6629:21:111",
                        "type": "",
                        "value": "Invalid mint sender"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6602:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6602:49:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6602:49:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6660:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6668:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6668:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6660:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_11376aeeca069ead4350fca39b5d9c1127aad4628b9952cdb72f4bfe9d8d5e1d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6500:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6514:4:111",
                "type": ""
              }
            ],
            "src": "6349:343:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6871:179:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6888:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6899:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6881:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6881:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6881:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6922:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6933:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6918:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6938:2:111",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6911:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6911:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6961:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6972:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6957:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6957:18:111"
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a206e6f74207965742064657465726d696e6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6977:31:111",
                        "type": "",
                        "value": "BaconCoin: not yet determined"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6950:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6950:59:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6950:59:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7018:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7030:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7041:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7026:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7026:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7018:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ad9441820a3b82e07f1a9ae9e4955b824d23f4750c14cba50152dba6ba92fad5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6848:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6862:4:111",
                "type": ""
              }
            ],
            "src": "6697:353:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7103:173:111",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7113:20:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7123:10:111",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7117:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7142:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7157:1:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7160:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7153:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7153:10:111"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "7146:3:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7172:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7187:1:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7190:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7183:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7183:10:111"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "7176:3:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7218:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7220:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7220:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7220:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "7208:3:111"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "7213:3:111"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7205:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:12:111"
                  },
                  "nodeType": "YulIf",
                  "src": "7202:38:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7249:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "7261:3:111"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "7266:3:111"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7257:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7257:13:111"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7249:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7085:1:111",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7088:1:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7094:4:111",
                "type": ""
              }
            ],
            "src": "7055:221:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7326:300:111",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7336:20:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7346:10:111",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7340:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7365:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7380:1:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7383:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7376:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7376:10:111"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "7369:3:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7418:168:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7439:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7442:77:111",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7432:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7432:88:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7432:88:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7540:1:111",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7543:4:111",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7533:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7533:15:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7533:15:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7568:1:111",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7571:4:111",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7561:6:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7561:15:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7561:15:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "7405:3:111"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7398:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7398:11:111"
                  },
                  "nodeType": "YulIf",
                  "src": "7395:191:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7595:25:111",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7608:1:111"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7611:2:111"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7604:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7604:10:111"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "7616:3:111"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7600:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7600:20:111"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7595:1:111"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7311:1:111",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7314:1:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7320:1:111",
                "type": ""
              }
            ],
            "src": "7281:345:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7805:164:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7822:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7833:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7815:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7815:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7815:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7856:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7867:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7852:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7852:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7872:2:111",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7845:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7845:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7845:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7895:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7906:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7891:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7891:18:111"
                      },
                      {
                        "hexValue": "496e76616c69642073656e646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7911:16:111",
                        "type": "",
                        "value": "Invalid sender"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7884:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7884:44:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7884:44:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7937:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7949:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7960:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7945:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7945:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7937:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7782:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7796:4:111",
                "type": ""
              }
            ],
            "src": "7631:338:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8148:227:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8165:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8176:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8158:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8158:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8158:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8199:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8210:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8195:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8195:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8215:2:111",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8188:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8188:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8188:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8238:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8249:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8234:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8234:18:111"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8254:34:111",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8227:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8227:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8227:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8309:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8320:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8305:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8305:18:111"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8325:7:111",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8298:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8298:35:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8298:35:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8342:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8354:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8365:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8350:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8350:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8342:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8125:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8139:4:111",
                "type": ""
              }
            ],
            "src": "7974:401:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8565:255:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8575:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8587:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8598:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8583:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8583:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8575:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8618:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8629:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8611:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8611:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8611:25:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8656:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8667:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8652:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8652:18:111"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8672:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8645:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8645:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8699:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8710:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8695:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8695:18:111"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8715:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8688:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8688:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8688:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8742:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8753:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8738:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8738:18:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8762:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8770:42:111",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8758:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8758:55:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8731:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8731:83:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8731:83:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8510:9:111",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8521:6:111",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8529:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8537:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8545:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8556:4:111",
                "type": ""
              }
            ],
            "src": "8380:440:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9010:255:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9020:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9032:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9043:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9028:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9028:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9020:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9063:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9074:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9056:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9056:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9056:25:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9101:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9112:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9097:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9097:18:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9121:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9129:42:111",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9117:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9117:55:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9090:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9090:83:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9090:83:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9193:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9204:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9189:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9189:18:111"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9209:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9182:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9182:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9236:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9247:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:18:111"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9252:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9225:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9225:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9225:34:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8955:9:111",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8966:6:111",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8974:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8982:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8990:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9001:4:111",
                "type": ""
              }
            ],
            "src": "8825:440:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9518:196:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9535:3:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9540:66:111",
                        "type": "",
                        "value": "0x1901000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9528:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9528:79:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9528:79:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9627:3:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9632:1:111",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9623:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9623:11:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9636:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9616:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9616:27:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9616:27:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9663:3:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9668:2:111",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9659:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9659:12:111"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9673:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9652:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9652:28:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9652:28:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9689:19:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9700:3:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9705:2:111",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9696:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9696:12:111"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9689:3:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9486:3:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9491:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9499:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9510:3:111",
                "type": ""
              }
            ],
            "src": "9270:444:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9900:217:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9910:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9922:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9933:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9918:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9910:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9953:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9964:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9946:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9946:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9946:25:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9991:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10002:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9987:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9987:18:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10011:6:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10019:4:111",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10007:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10007:17:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9980:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9980:45:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9980:45:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10045:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10056:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10041:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10041:18:111"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10061:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10034:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10034:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10034:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10088:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10099:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10084:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10084:18:111"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10104:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10077:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10077:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10077:34:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9845:9:111",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9856:6:111",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9864:6:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9872:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9880:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9891:4:111",
                "type": ""
              }
            ],
            "src": "9719:398:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10296:178:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10313:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10324:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10306:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10306:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10306:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10347:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10358:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10343:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10343:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10363:2:111",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10336:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10336:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10336:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10386:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:18:111"
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20696e76616c6964207369676e6174757265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10402:30:111",
                        "type": "",
                        "value": "BaconCoin: invalid signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10375:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:58:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10375:58:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10442:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10454:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10465:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10450:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10450:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10442:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fe86f1a70d8a73c963779166189a0f6adfd51c9d80749604e17aab463f4e740__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10273:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10287:4:111",
                "type": ""
              }
            ],
            "src": "10122:352:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10526:148:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10617:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10619:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10619:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10619:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10542:5:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10549:66:111",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10539:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10539:77:111"
                  },
                  "nodeType": "YulIf",
                  "src": "10536:103:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10648:20:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10659:5:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10666:1:111",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10655:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10655:13:111"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10648:3:111"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10508:5:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10518:3:111",
                "type": ""
              }
            ],
            "src": "10479:195:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10853:174:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10870:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10881:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10863:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10863:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10904:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10915:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10900:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10900:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10920:2:111",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10893:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10893:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10893:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10943:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10954:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10939:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10939:18:111"
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20696e76616c6964206e6f6e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10959:26:111",
                        "type": "",
                        "value": "BaconCoin: invalid nonce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10932:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10932:54:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10932:54:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10995:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11007:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11018:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11003:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11003:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10995:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c7fb70ccf7a4851ea9ae667899fb553a7c6a271982ae4c75b45e64df0883ce54__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10830:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10844:4:111",
                "type": ""
              }
            ],
            "src": "10679:348:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11206:178:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11223:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11234:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11216:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11216:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11216:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11257:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11268:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11253:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11253:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11273:2:111",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11246:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11246:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11246:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11296:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11307:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11292:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11292:18:111"
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a207369676e61747572652065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11312:30:111",
                        "type": "",
                        "value": "BaconCoin: signature expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11285:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11285:58:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11285:58:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11352:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11364:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11375:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11360:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11360:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11352:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7fccfe800880a6da3c737bcad078a68cd689f75542bc1eb09938d4cd675e09c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11183:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11197:4:111",
                "type": ""
              }
            ],
            "src": "11032:352:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11563:224:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11580:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11591:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11573:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11573:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11573:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11614:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11625:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11610:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11610:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11630:2:111",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11603:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11603:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11603:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11653:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11664:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11649:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11649:18:111"
                      },
                      {
                        "hexValue": "4261636f6e436f696e3a20496e76616c69642073656e646572206f7220636861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11669:34:111",
                        "type": "",
                        "value": "BaconCoin: Invalid sender or cha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11642:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11642:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11642:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11724:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11735:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11720:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11720:18:111"
                      },
                      {
                        "hexValue": "696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11740:4:111",
                        "type": "",
                        "value": "in"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11713:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11713:32:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11713:32:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11754:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11766:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11777:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11762:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11762:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11754:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09b7c37f7d299da33060db30c0be756d0fd5d461225b9c62e1993e342f47c7e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11540:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11554:4:111",
                "type": ""
              }
            ],
            "src": "11389:398:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11966:226:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11983:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11994:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11976:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11976:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11976:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12017:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12028:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12013:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12013:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12033:2:111",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12006:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12006:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12006:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12056:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12067:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12052:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12052:18:111"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12072:34:111",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12045:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12045:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12045:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12127:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12138:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12123:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12123:18:111"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12143:6:111",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12116:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12116:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12116:34:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12159:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12171:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12182:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12167:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12167:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12159:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11943:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11957:4:111",
                "type": ""
              }
            ],
            "src": "11792:400:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12371:224:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12388:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12399:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12381:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12381:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12381:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12422:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12433:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12418:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12418:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12438:2:111",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12411:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12411:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12411:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12461:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12472:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12457:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12457:18:111"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12477:34:111",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12450:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12450:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12450:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12532:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12543:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12528:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12528:18:111"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12548:4:111",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12521:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12521:32:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12521:32:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12562:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12574:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12585:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12570:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12570:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12562:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12348:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12362:4:111",
                "type": ""
              }
            ],
            "src": "12197:398:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12774:230:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12791:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12802:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12784:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12784:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12784:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12825:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12836:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12821:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12821:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12841:2:111",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12814:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12814:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12814:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12864:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12875:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12860:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12860:18:111"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12880:34:111",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12853:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12853:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12853:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12935:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12946:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12931:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12931:18:111"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12951:10:111",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12924:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12924:38:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12924:38:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12971:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12983:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12994:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12979:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12979:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12971:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12751:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12765:4:111",
                "type": ""
              }
            ],
            "src": "12600:404:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13183:181:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13200:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13211:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13193:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13193:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13193:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13234:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13245:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13230:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13230:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13250:2:111",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13223:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13223:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13223:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13273:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13284:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13269:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13269:18:111"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13289:33:111",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13262:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13262:61:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13262:61:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13332:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13344:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13355:2:111",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13340:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13340:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13332:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13160:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13174:4:111",
                "type": ""
              }
            ],
            "src": "13009:355:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13543:223:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13560:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13571:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13553:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13553:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13553:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13594:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13605:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13590:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13590:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13610:2:111",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13583:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13583:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13583:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13633:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13644:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13629:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13629:18:111"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13649:34:111",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13622:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13622:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13622:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13704:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13715:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13700:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13700:18:111"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13720:3:111",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13693:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13693:31:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13693:31:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13733:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13745:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13756:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13741:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13741:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13733:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13520:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13534:4:111",
                "type": ""
              }
            ],
            "src": "13369:397:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13945:224:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13962:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13973:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13955:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13955:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13955:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13996:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14007:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13992:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13992:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14012:2:111",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13985:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13985:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13985:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14035:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14046:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14031:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14031:18:111"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14051:34:111",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14024:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14024:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14024:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14106:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14117:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14102:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14102:18:111"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14122:4:111",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14095:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14095:32:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14095:32:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14136:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14148:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14159:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14144:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14144:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14136:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13922:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13936:4:111",
                "type": ""
              }
            ],
            "src": "13771:398:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14223:76:111",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14245:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14247:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14247:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14247:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14239:1:111"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14242:1:111"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14236:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14236:8:111"
                  },
                  "nodeType": "YulIf",
                  "src": "14233:34:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14276:17:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14288:1:111"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14291:1:111"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14284:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14284:9:111"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14276:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14205:1:111",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14208:1:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14214:4:111",
                "type": ""
              }
            ],
            "src": "14174:125:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14478:227:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14495:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14506:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14488:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14488:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14488:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14529:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14540:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14525:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14525:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14545:2:111",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14518:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14518:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14568:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14579:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14564:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14564:18:111"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14584:34:111",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14557:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14557:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14557:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14639:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14650:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14635:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14635:18:111"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14655:7:111",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14628:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14628:35:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14628:35:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14672:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14684:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14695:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14680:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14680:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14672:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14455:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14469:4:111",
                "type": ""
              }
            ],
            "src": "14304:401:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14884:225:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14901:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14912:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14894:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14894:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14894:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14935:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14946:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14931:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14931:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14951:2:111",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14924:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14924:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14924:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14974:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14985:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14970:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14970:18:111"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14990:34:111",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14963:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14963:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14963:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15045:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15056:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15041:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15041:18:111"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15061:5:111",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15034:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15034:33:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15034:33:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15076:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15088:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15099:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15084:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15084:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15076:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14861:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14875:4:111",
                "type": ""
              }
            ],
            "src": "14710:399:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15288:228:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15305:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15316:2:111",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15298:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15298:21:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15298:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15339:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15350:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15335:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15335:18:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15355:2:111",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15328:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15328:30:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15328:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15378:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15389:2:111",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15374:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15374:18:111"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15394:34:111",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15367:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15367:62:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15367:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15449:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15460:2:111",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15445:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15445:18:111"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15465:8:111",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15438:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15438:36:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15438:36:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15483:27:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15495:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15506:3:111",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15491:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15491:19:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15483:4:111"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15265:9:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15279:4:111",
                "type": ""
              }
            ],
            "src": "15114:402:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15568:181:111",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15578:20:111",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15588:10:111",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15582:2:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15607:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15622:1:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15625:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15618:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15618:10:111"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "15611:3:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15637:21:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15652:1:111"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15655:2:111"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15648:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15648:10:111"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "15641:3:111",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15692:22:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15694:16:111"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15694:18:111"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15694:18:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "15673:3:111"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15682:2:111"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "15686:3:111"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15678:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15678:12:111"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15670:2:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15670:21:111"
                  },
                  "nodeType": "YulIf",
                  "src": "15667:47:111"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15723:20:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "15734:3:111"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "15739:3:111"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15730:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15730:13:111"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15723:3:111"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15551:1:111",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15554:1:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15560:3:111",
                "type": ""
              }
            ],
            "src": "15521:228:111"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15883:119:111",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15893:26:111",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15905:9:111"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15916:2:111",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15901:3:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15901:18:111"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15893:4:111"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15935:9:111"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15946:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15928:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15928:25:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15928:25:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15973:9:111"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15984:2:111",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15969:3:111"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15969:18:111"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15989:6:111"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15962:6:111"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15962:34:111"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15962:34:111"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15844:9:111",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15855:6:111",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15863:6:111",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15874:4:111",
                "type": ""
              }
            ],
            "src": "15754:248:111"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint256__to_t_uint32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_11376aeeca069ead4350fca39b5d9c1127aad4628b9952cdb72f4bfe9d8d5e1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid mint sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad9441820a3b82e07f1a9ae9e4955b824d23f4750c14cba50152dba6ba92fad5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"BaconCoin: not yet determined\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let _1 := 0xffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_0fe86f1a70d8a73c963779166189a0f6adfd51c9d80749604e17aab463f4e740__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BaconCoin: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c7fb70ccf7a4851ea9ae667899fb553a7c6a271982ae4c75b45e64df0883ce54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"BaconCoin: invalid nonce\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fccfe800880a6da3c737bcad078a68cd689f75542bc1eb09938d4cd675e09c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BaconCoin: signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09b7c37f7d299da33060db30c0be756d0fd5d461225b9c62e1993e342f47c7e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BaconCoin: Invalid sender or cha\")\n        mstore(add(headStart, 96), \"in\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 111,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedSourceMap": "317:10245:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6119:166;;;;;;:::i;:::-;;:::i;:::-;;;1300:14:111;;1293:22;1275:41;;1263:2;1248:18;6119:166:58;1135:187:111;5110:106:58;5197:12;;5110:106;;;1473:25:111;;;1461:2;1446:18;5110:106:58;1327:177:111;1146:122:55;;1188:80;1146:122;;3798:242;;;;;;:::i;:::-;;:::i;1563:137::-;;1605:95;1563:137;;4959:91:58;;;5041:2;2166:36:111;;2154:2;2139:18;4959:91:58;2024:184:111;7625:212:58;;;;;;:::i;:::-;;:::i;4046:267:55:-;;;;;;:::i;:::-;;:::i;:::-;;2067:78;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2770:10:111;2758:23;;;2740:42;;2813:2;2798:18;;2791:34;;;;2713:18;2067:78:55;2568:263:111;4601:71:55;4664:1;4601:71;;1031:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1031:45:55;;;;;;-1:-1:-1;;;;;3191:55:111;;;3173:74;;3161:2;3146:18;1031:45:55;3027:226:111;6496:100:55;;;;;;:::i;:::-;;:::i;768:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3432:10:111;3420:23;;;3402:42;;3390:2;3375:18;768:49:55;3258:192:111;5274:125:58;;;;;;:::i;:::-;-1:-1:-1;;;;;5374:18:58;5348:7;5374:18;;;:9;:18;;;;;;;5274:125;7442:1225:55;;;;;;:::i;:::-;;:::i;1778:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;4233:102:58;;;:::i;2938:178:55:-;;;;;;:::i;:::-;;:::i;2211:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8324:405:58;;;;;;:::i;:::-;;:::i;3477:220:55:-;;;;;;:::i;:::-;;:::i;6790:236::-;;;;;;:::i;:::-;;:::i;5590:764::-;;;;;;:::i;:::-;;:::i;5832:149:58:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5947:18:58;;;5921:7;5947:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5832:149;3122:258:55;;;;;;:::i;:::-;;:::i;1359:117::-;;1405:71;1359:117;;611:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4319:171;;;;;;:::i;:::-;;:::i;4022:98:58:-;4076:13;4108:5;4101:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:98;:::o;6119:166::-;6202:4;6218:39;965:10:19;6241:7:58;6250:6;6218:8;:39::i;:::-;-1:-1:-1;6274:4:58;6119:166;;;;;:::o;3798:242:55:-;3887:4;3911:36;3930:3;3935;3940:6;3911:18;:36::i;:::-;3903:45;;;;;;-1:-1:-1;;;;;3973:14:55;;;;;;;:9;:14;;;;;;;3989;;;;;;;;3958:54;;3973:14;;;;3989;4005:6;3958:14;:54::i;:::-;-1:-1:-1;4029:4:55;3798:242;;;;;:::o;7625:212:58:-;965:10:19;7713:4:58;7761:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;7761:34:58;;;;;;;;;;7713:4;;7729:80;;7752:7;;7761:47;;7798:10;;7761:47;:::i;:::-;7729:8;:80::i;4046:267:55:-;4132:15;;-1:-1:-1;;;;;4132:15:55;4118:10;:29;;:62;;-1:-1:-1;4165:15:55;;-1:-1:-1;;;;;4165:15:55;4151:10;:29;4118:62;4110:94;;;;-1:-1:-1;;;4110:94:55;;6551:2:111;4110:94:55;;;6533:21:111;6590:2;6570:18;;;6563:30;6629:21;6609:18;;;6602:49;6668:18;;4110:94:55;;;;;;;;;4214:28;4226:7;4235:6;4214:11;:28::i;:::-;-1:-1:-1;;;;;4279:18:55;;;4275:1;4279:18;;;:9;:18;;;;;;4252:54;;4279:18;4299:6;4252:14;:54::i;:::-;4046:267;;:::o;6496:100::-;6557:32;6567:10;6579:9;6557;:32::i;:::-;6496:100;:::o;7442:1225::-;7521:7;7562:12;7548:11;:26;7540:68;;;;-1:-1:-1;;;7540:68:55;;6899:2:111;7540:68:55;;;6881:21:111;6938:2;6918:18;;;6911:30;6977:31;6957:18;;;6950:59;7026:18;;7540:68:55;6697:353:111;7540:68:55;-1:-1:-1;;;;;7641:31:55;;7619:19;7641:31;;;:22;:31;;;;;;;;7686:17;7682:56;;7726:1;7719:8;;;;;7682:56;-1:-1:-1;;;;;7795:28:55;;;;;;:19;:28;;;;;7855:11;;7824:16;7839:1;7824:12;:16;:::i;:::-;7795:46;;;;;;;;;;;;;;;-1:-1:-1;7795:46:55;:56;;:71;7791:161;;-1:-1:-1;;;;;7889:28:55;;;;;;:19;:28;;;;;;7918:16;7933:1;7918:12;:16;:::i;:::-;7889:46;;;;;;;;;;;;;;;:52;;;7882:59;;;;;7791:161;-1:-1:-1;;;;;8010:28:55;;;;;;:19;:28;;;;;;;;:31;;;;;;;;:41;:31;:41;:55;-1:-1:-1;8006:94:55;;;8088:1;8081:8;;;;;8006:94;8110:12;;8151:16;8166:1;8151:12;:16;:::i;:::-;8136:31;;8177:426;8192:5;8184:13;;:5;:13;;;8177:426;;;8213:13;8255:1;8238:13;8246:5;8238;:13;:::i;:::-;8237:19;;;;:::i;:::-;8229:27;;:5;:27;:::i;:::-;-1:-1:-1;;;;;8320:28:55;;8297:20;8320:28;;;:19;:28;;;;;;;;:36;;;;;;;;;;;;;8297:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;8213:43;;-1:-1:-1;8374:27:55;;8370:223;;;8428:8;;;;-1:-1:-1;8421:15:55;;-1:-1:-1;;;;8421:15:55;8370:223;8461:12;;:26;;;-1:-1:-1;8457:136:55;;;8515:6;8507:14;;8457:136;;;8568:10;8577:1;8568:6;:10;:::i;:::-;8560:18;;8457:136;8199:404;;8177:426;;;-1:-1:-1;;;;;;8619:28:55;;;;;;:19;:28;;;;;;;;:35;;;;;;;;;;:41;;;;-1:-1:-1;;7442:1225:55;;;;:::o;4233:102:58:-;4289:13;4321:7;4314:14;;;;;:::i;2938:178:55:-;3031:15;;-1:-1:-1;;;;;3031:15:55;3017:10;:29;3009:56;;;;-1:-1:-1;;;3009:56:55;;7833:2:111;3009:56:55;;;7815:21:111;7872:2;7852:18;;;7845:30;7911:16;7891:18;;;7884:44;7945:18;;3009:56:55;7631:338:111;3009:56:55;3075:15;:34;;;;-1:-1:-1;;;;;3075:34:55;;;;;;;;;;2938:178::o;8324:405:58:-;965:10:19;8417:4:58;8460:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;8460:34:58;;;;;;;;;;8512:35;;;;8504:85;;;;-1:-1:-1;;;8504:85:58;;8176:2:111;8504:85:58;;;8158:21:111;8215:2;8195:18;;;8188:30;8254:34;8234:18;;;8227:62;8325:7;8305:18;;;8298:35;8350:19;;8504:85:58;7974:401:111;8504:85:58;8623:67;965:10:19;8646:7:58;8674:15;8655:16;:34;8623:8;:67::i;3477:220:55:-;3546:4;3570:27;3585:3;3590:6;3570:14;:27::i;:::-;3562:36;;;;;;3633:10;3623:21;;;;:9;:21;;;;;;;-1:-1:-1;;;;;3646:14:55;;;;;;;;;;3608:61;;3623:21;;;3646:14;3662:6;3608:14;:61::i;6790:236::-;-1:-1:-1;;;;;6896:31:55;;6855:7;6896:31;;;:22;:31;;;;;;;;6944:16;:75;;7018:1;6944:75;;;-1:-1:-1;;;;;6963:28:55;;;;;;:19;:28;;;;;;6992:16;7007:1;6992:12;:16;:::i;:::-;6963:46;;;;;;;;;;;;;;;:52;;;6944:75;6937:82;6790:236;-1:-1:-1;;;6790:236:55:o;5590:764::-;5705:23;1188:80;5785:6;:4;:6::i;:::-;5769:24;;;;;;5795:12;5010:9;;4846:205;5795:12;5741:82;;;;;;;8611:25:111;;;;8652:18;;;8645:34;;;;8695:18;;;8688:34;;;;5817:4:55;8738:18:111;;;;8731:83;;;;5741:82:55;;;;;;;;;;8583:19:111;;;5741:82:55;;5731:93;;;;;;1405:71;5865:57;;;9056:25:111;-1:-1:-1;;;;;9117:55:111;;9097:18;;;9090:83;9189:18;;;9182:34;;;9232:18;;;;9225:34;;;5865:57:55;;;;;;;;;;9028:19:111;;;5865:57:55;;;5855:68;;;;;;;9540:66:111;5960:57:55;;;9528:79:111;9623:11;;;9616:27;;;9659:12;;;9652:28;;;5731:93:55;;-1:-1:-1;;;9696:12:111;;5960:57:55;;;-1:-1:-1;;5960:57:55;;;;;;;;;5950:68;;5960:57;5950:68;;;;6028:17;6048:26;;;;;;;;;9946:25:111;;;10019:4;10007:17;;9987:18;;;9980:45;;;;10041:18;;;10034:34;;;10084:18;;;10077:34;;;5950:68:55;;-1:-1:-1;6028:17:55;6048:26;;9918:19:111;;6048:26:55;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6048:26:55;;-1:-1:-1;;6048:26:55;;;-1:-1:-1;;;;;;;6092:23:55;;6084:64;;;;-1:-1:-1;;;6084:64:55;;10324:2:111;6084:64:55;;;10306:21:111;10363:2;10343:18;;;10336:30;10402;10382:18;;;10375:58;10450:18;;6084:64:55;10122:352:111;6084:64:55;-1:-1:-1;;;;;6175:17:55;;;;;;:6;:17;;;;;:19;;;;;;:::i;:::-;;;;;6166:5;:28;6158:65;;;;-1:-1:-1;;;6158:65:55;;10881:2:111;6158:65:55;;;10863:21:111;10920:2;10900:18;;;10893:30;10959:26;10939:18;;;10932:54;11003:18;;6158:65:55;10679:348:111;6158:65:55;6260:6;6241:15;:25;;6233:66;;;;-1:-1:-1;;;6233:66:55;;11234:2:111;6233:66:55;;;11216:21:111;11273:2;11253:18;;;11246:30;11312;11292:18;;;11285:58;11360:18;;6233:66:55;11032:352:111;6233:66:55;6316:31;6326:9;6337;6316;:31::i;:::-;6309:38;;;;5590:764;;;;;;;:::o;3122:258::-;3226:42;3212:10;:56;:78;;;;;3272:13;3289:1;3272:18;3212:78;3204:125;;;;-1:-1:-1;;;3204:125:55;;11591:2:111;3204:125:55;;;11573:21:111;11630:2;11610:18;;;11603:30;11669:34;11649:18;;;11642:62;11740:4;11720:18;;;11713:32;11762:19;;3204:125:55;11389:398:111;4319:171:55;4385:31;4397:10;4409:6;4385:11;:31::i;:::-;4451:10;4441:21;;;;:9;:21;;;;;;4426:57;;-1:-1:-1;;;;;4441:21:55;;;;4476:6;4426:14;:57::i;11900:370:58:-;-1:-1:-1;;;;;12031:19:58;;12023:68;;;;-1:-1:-1;;;12023:68:58;;11994:2:111;12023:68:58;;;11976:21:111;12033:2;12013:18;;;12006:30;12072:34;12052:18;;;12045:62;12143:6;12123:18;;;12116:34;12167:19;;12023:68:58;11792:400:111;12023:68:58;-1:-1:-1;;;;;12109:21:58;;12101:68;;;;-1:-1:-1;;;12101:68:58;;12399:2:111;12101:68:58;;;12381:21:111;12438:2;12418:18;;;12411:30;12477:34;12457:18;;;12450:62;12548:4;12528:18;;;12521:32;12570:19;;12101:68:58;12197:398:111;12101:68:58;-1:-1:-1;;;;;12180:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;12231:32;;1473:25:111;;;12231:32:58;;1446:18:111;12231:32:58;;;;;;;11900:370;;;:::o;6752:478::-;6888:4;6904:36;6914:6;6922:9;6933:6;6904:9;:36::i;:::-;-1:-1:-1;;;;;6978:19:58;;6951:24;6978:19;;;:11;:19;;;;;;;;965:10:19;6978:33:58;;;;;;;;7029:26;;;;7021:79;;;;-1:-1:-1;;;7021:79:58;;12802:2:111;7021:79:58;;;12784:21:111;12841:2;12821:18;;;12814:30;12880:34;12860:18;;;12853:62;12951:10;12931:18;;;12924:38;12979:19;;7021:79:58;12600:404:111;7021:79:58;7134:57;7143:6;965:10:19;7184:6:58;7165:16;:25;7134:8;:57::i;:::-;-1:-1:-1;7219:4:58;;6752:478;-1:-1:-1;;;;6752:478:58:o;9048:867:55:-;9153:6;-1:-1:-1;;;;;9143:16:55;:6;-1:-1:-1;;;;;9143:16:55;;;:30;;;;;9172:1;9163:6;:10;9143:30;9139:770;;;-1:-1:-1;;;;;9193:20:55;;;9189:348;;-1:-1:-1;;;;;9252:30:55;;9233:16;9252:30;;;:22;:30;;;;;;;;;9320:13;:68;;9387:1;9320:68;;;-1:-1:-1;;;;;9336:27:55;;;;;;:19;:27;;;;;;9364:13;9376:1;9364:9;:13;:::i;:::-;9336:42;;;;;;;;;;;;;;;:48;;;9320:68;9300:88;-1:-1:-1;9406:17:55;9426:21;9300:88;9440:6;9426:13;:21::i;:::-;9406:41;;9465:57;9482:6;9490:9;9501;9512;9465:16;:57::i;:::-;9215:322;;;9189:348;-1:-1:-1;;;;;9555:20:55;;;9551:348;;-1:-1:-1;;;;;9614:30:55;;9595:16;9614:30;;;:22;:30;;;;;;;;;9682:13;:68;;9749:1;9682:68;;;-1:-1:-1;;;;;9698:27:55;;;;;;:19;:27;;;;;;9726:13;9738:1;9726:9;:13;:::i;:::-;9698:42;;;;;;;;;;;;;;;:48;;;9682:68;9662:88;-1:-1:-1;9768:17:55;9788:21;9662:88;9802:6;9788:13;:21::i;:::-;9768:41;;9827:57;9844:6;9852:9;9863;9874;9827:16;:57::i;9551:348::-;9048:867;;;:::o;10192:389:58:-;-1:-1:-1;;;;;10275:21:58;;10267:65;;;;-1:-1:-1;;;10267:65:58;;13211:2:111;10267:65:58;;;13193:21:111;13250:2;13230:18;;;13223:30;13289:33;13269:18;;;13262:61;13340:18;;10267:65:58;13009:355:111;10267:65:58;10419:6;10403:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10435:18:58;;;;;;:9;:18;;;;;:28;;10457:6;;10435:18;:28;;10457:6;;10435:28;:::i;:::-;;;;-1:-1:-1;;10478:37:58;;1473:25:111;;;-1:-1:-1;;;;;10478:37:58;;;10495:1;;10478:37;;1461:2:111;1446:18;10478:37:58;;;;;;;4046:267:55;;:::o;8673:369::-;-1:-1:-1;;;;;8775:20:55;;;8749:23;8775:20;;;:9;:20;;;;;;;;;;5374:9:58;:18;;;;;;8862:20:55;;;;:32;;;;;;;;;;;8910:54;;8775:20;;;;;5374:18:58;;8862:32:55;;8775:20;;;8910:54;;8749:23;8910:54;8975:60;8990:15;9007:9;9018:16;8975:14;:60::i;:::-;8739:303;;8673:369;;:::o;5602:172:58:-;5688:4;5704:42;965:10:19;5728:9:58;5739:6;5704:9;:42::i;10901:576::-;-1:-1:-1;;;;;10984:21:58;;10976:67;;;;-1:-1:-1;;;10976:67:58;;13571:2:111;10976:67:58;;;13553:21:111;13610:2;13590:18;;;13583:30;13649:34;13629:18;;;13622:62;13720:3;13700:18;;;13693:31;13741:19;;10976:67:58;13369:397:111;10976:67:58;-1:-1:-1;;;;;11139:18:58;;11114:22;11139:18;;;:9;:18;;;;;;11175:24;;;;11167:71;;;;-1:-1:-1;;;11167:71:58;;13973:2:111;11167:71:58;;;13955:21:111;14012:2;13992:18;;;13985:30;14051:34;14031:18;;;14024:62;14122:4;14102:18;;;14095:32;14144:19;;11167:71:58;13771:398:111;11167:71:58;-1:-1:-1;;;;;11272:18:58;;;;;;:9;:18;;;;;11293:23;;;11272:44;;11336:12;:22;;11310:6;;11272:18;11336:22;;11310:6;;11336:22;:::i;:::-;;;;-1:-1:-1;;11374:37:58;;1473:25:111;;;11400:1:58;;-1:-1:-1;;;;;11374:37:58;;;;;1461:2:111;1446:18;11374:37:58;;;;;;;9048:867:55;;;:::o;9203:713:58:-;-1:-1:-1;;;;;9338:20:58;;9330:70;;;;-1:-1:-1;;;9330:70:58;;14506:2:111;9330:70:58;;;14488:21:111;14545:2;14525:18;;;14518:30;14584:34;14564:18;;;14557:62;14655:7;14635:18;;;14628:35;14680:19;;9330:70:58;14304:401:111;9330:70:58;-1:-1:-1;;;;;9418:23:58;;9410:71;;;;-1:-1:-1;;;9410:71:58;;14912:2:111;9410:71:58;;;14894:21:111;14951:2;14931:18;;;14924:30;14990:34;14970:18;;;14963:62;15061:5;15041:18;;;15034:33;15084:19;;9410:71:58;14710:399:111;9410:71:58;-1:-1:-1;;;;;9574:17:58;;9550:21;9574:17;;;:9;:17;;;;;;9609:23;;;;9601:74;;;;-1:-1:-1;;;9601:74:58;;15316:2:111;9601:74:58;;;15298:21:111;15355:2;15335:18;;;15328:30;15394:34;15374:18;;;15367:62;15465:8;15445:18;;;15438:36;15491:19;;9601:74:58;15114:402:111;9601:74:58;-1:-1:-1;;;;;9709:17:58;;;;;;;:9;:17;;;;;;9729:22;;;9709:42;;9771:20;;;;;;;;:30;;9745:6;;9709:17;9771:30;;9745:6;;9771:30;:::i;:::-;;;;;;;;9834:9;-1:-1:-1;;;;;9817:35:58;9826:6;-1:-1:-1;;;;;9817:35:58;;9845:6;9817:35;;;;1473:25:111;;1461:2;1446:18;;1327:177;9817:35:58;;;;;;;;9863:46;9048:867:55;3108:96:48;3166:7;3192:5;3196:1;3192;:5;:::i;9921:639:55:-;10040:18;10061:63;10068:12;10061:63;;;;;;;;;;;;;;;;;:6;:63::i;:::-;10040:84;;10152:1;10137:12;:16;;;:93;;;;-1:-1:-1;;;;;;10157:30:55;;;;;;:19;:30;;;;;:73;;;;10188:16;10203:1;10188:12;:16;:::i;:::-;10157:48;;;;;;;;;;;;;;;-1:-1:-1;10157:48:55;:58;;:73;10137:93;10133:356;;;-1:-1:-1;;;;;10244:30:55;;;;;;:19;:30;;;;;10301:8;;10275:16;10290:1;10275:12;:16;:::i;:::-;10244:48;;;;;;;;;;;;;-1:-1:-1;10244:48:55;:54;;:65;10133:356;;;10383:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10336:30:55;;-1:-1:-1;10336:30:55;;;:19;:30;;;;;:44;;;;;;;;;;;:80;;;;-1:-1:-1;;10336:80:55;;;;;;;;-1:-1:-1;10336:80:55;;;;10464:16;;10336:44;;10464:16;:::i;:::-;-1:-1:-1;;;;;10428:33:55;;;;;;:22;:33;;;;;:52;;-1:-1:-1;;10428:52:55;;;;;;;;;;;;10133:356;10502:51;;;15928:25:111;;;15984:2;15969:18;;15962:34;;;-1:-1:-1;;;;;10502:51:55;;;;;15901:18:111;10502:51:55;;;;;;;10032:528;9921:639;;;;:::o;2741:96:48:-;2799:7;2825:5;2829:1;2825;:5;:::i;4682:158:55:-;4757:6;4794:12;4787:5;4783:9;;4775:32;;;;-1:-1:-1;;;4775:32:55;;;;;;;;:::i;:::-;-1:-1:-1;4831:1:55;;4682:158;-1:-1:-1;;4682:158:55:o;14:656:111:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:111;574:15;-1:-1:-1;;570:88:111;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:111:o;675:196::-;743:20;;-1:-1:-1;;;;;792:54:111;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:111:o;1691:328::-;1768:6;1776;1784;1837:2;1825:9;1816:7;1812:23;1808:32;1805:52;;;1853:1;1850;1843:12;1805:52;1876:29;1895:9;1876:29;:::i;:::-;1866:39;;1924:38;1958:2;1947:9;1943:18;1924:38;:::i;:::-;1914:48;;2009:2;1998:9;1994:18;1981:32;1971:42;;1691:328;;;;;:::o;2213:350::-;2280:6;2288;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2380:29;2399:9;2380:29;:::i;:::-;2370:39;;2459:2;2448:9;2444:18;2431:32;2503:10;2496:5;2492:22;2485:5;2482:33;2472:61;;2529:1;2526;2519:12;2472:61;2552:5;2542:15;;;2213:350;;;;;:::o;2836:186::-;2895:6;2948:2;2936:9;2927:7;2923:23;2919:32;2916:52;;;2964:1;2961;2954:12;2916:52;2987:29;3006:9;2987:29;:::i;3455:618::-;3557:6;3565;3573;3581;3589;3597;3650:3;3638:9;3629:7;3625:23;3621:33;3618:53;;;3667:1;3664;3657:12;3618:53;3690:29;3709:9;3690:29;:::i;:::-;3680:39;;3766:2;3755:9;3751:18;3738:32;3728:42;;3817:2;3806:9;3802:18;3789:32;3779:42;;3871:2;3860:9;3856:18;3843:32;3915:4;3908:5;3904:16;3897:5;3894:27;3884:55;;3935:1;3932;3925:12;3884:55;3455:618;;;;-1:-1:-1;3455:618:111;;4010:3;3995:19;;3982:33;;4062:3;4047:19;;;4034:33;;-1:-1:-1;3455:618:111;-1:-1:-1;;3455:618:111:o;4078:260::-;4146:6;4154;4207:2;4195:9;4186:7;4182:23;4178:32;4175:52;;;4223:1;4220;4213:12;4175:52;4246:29;4265:9;4246:29;:::i;:::-;4236:39;;4294:38;4328:2;4317:9;4313:18;4294:38;:::i;:::-;4284:48;;4078:260;;;;;:::o;4343:184::-;-1:-1:-1;;;4392:1:111;4385:88;4492:4;4489:1;4482:15;4516:4;4513:1;4506:15;4532:1048;4609:6;4617;4670:2;4658:9;4649:7;4645:23;4641:32;4638:52;;;4686:1;4683;4676:12;4638:52;4722:9;4709:23;4699:33;;4783:2;4772:9;4768:18;4755:32;4806:18;4847:2;4839:6;4836:14;4833:34;;;4863:1;4860;4853:12;4833:34;4901:6;4890:9;4886:22;4876:32;;4946:7;4939:4;4935:2;4931:13;4927:27;4917:55;;4968:1;4965;4958:12;4917:55;5004:2;4991:16;5026:2;5022;5019:10;5016:36;;;5032:18;;:::i;:::-;5166:2;5160:9;5228:4;5220:13;;-1:-1:-1;;5216:22:111;;;5240:2;5212:31;5208:40;5196:53;;;5264:18;;;5284:22;;;5261:46;5258:72;;;5310:18;;:::i;:::-;5350:10;5346:2;5339:22;5385:2;5377:6;5370:18;5425:7;5420:2;5415;5411;5407:11;5403:20;5400:33;5397:53;;;5446:1;5443;5436:12;5397:53;5502:2;5497;5493;5489:11;5484:2;5476:6;5472:15;5459:46;5547:1;5542:2;5537;5529:6;5525:15;5521:24;5514:35;5568:6;5558:16;;;;;;;4532:1048;;;;;:::o;5585:437::-;5664:1;5660:12;;;;5707;;;5728:61;;5782:4;5774:6;5770:17;5760:27;;5728:61;5835:2;5827:6;5824:14;5804:18;5801:38;5798:218;;;-1:-1:-1;;;5869:1:111;5862:88;5973:4;5970:1;5963:15;6001:4;5998:1;5991:15;5798:218;;5585:437;;;:::o;6027:184::-;-1:-1:-1;;;6076:1:111;6069:88;6176:4;6173:1;6166:15;6200:4;6197:1;6190:15;6216:128;6256:3;6287:1;6283:6;6280:1;6277:13;6274:39;;;6293:18;;:::i;:::-;-1:-1:-1;6329:9:111;;6216:128::o;7055:221::-;7094:4;7123:10;7183;;;;7153;;7205:12;;;7202:38;;;7220:18;;:::i;:::-;7257:13;;7055:221;-1:-1:-1;;;7055:221:111:o;7281:345::-;7320:1;7346:10;7383:2;7380:1;7376:10;7405:3;7395:191;;-1:-1:-1;;;7439:1:111;7432:88;7543:4;7540:1;7533:15;7571:4;7568:1;7561:15;7395:191;7604:10;;7600:20;;;;;7281:345;-1:-1:-1;;7281:345:111:o;10479:195::-;10518:3;10549:66;10542:5;10539:77;10536:103;;;10619:18;;:::i;:::-;-1:-1:-1;10666:1:111;10655:13;;10479:195::o;14174:125::-;14214:4;14242:1;14239;14236:8;14233:34;;;14247:18;;:::i;:::-;-1:-1:-1;14284:9:111;;14174:125::o;15521:228::-;15560:3;15588:10;15625:2;15622:1;15618:10;15655:2;15652:1;15648:10;15686:3;15682:2;15678:12;15673:3;15670:21;15667:47;;;15694:18;;:::i;:::-;15730:13;;15521:228;-1:-1:-1;;;;15521:228:111:o",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "getCurrentVotes(address)": {
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "version()": {
        "details": "Function version returns uint depending on what version the contract is on"
      }
    },
    "version": 1
  },
  "generatedSources": [],
  "immutableReferences": {},
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"delegateCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numDelegateCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"rinkebyOnlySetStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"version()\":{\"details\":\"Function version returns uint depending on what version the contract is on\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the permit struct used by the contract\"},\"checkpoints(address,uint32)\":{\"notice\":\"DEPRECATED   A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegateCheckpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for a delegate's account, by index\"},\"delegates(address)\":{\"notice\":\"A record of each accounts delegate\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"DEPRECATED   The number of checkpoints for each account\"},\"numDelegateCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BaconCoin/BaconCoin3.sol\":\"BaconCoin3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beb2713aca05976562500789329e8c41320d00bd68ea9247856ec73894c3e3f\",\"dweb:/ipfs/QmQKwkpofsZYAzMZs7uNL7Qq58zVBuhoZCGpD6bJdUwyqy\"]},\"project:/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x5ca0eb1120133a6d0799752532d4638048391823a2b623c4fe9ff46e262266fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://439a76e6c35f75a7253f1ff68c99f399094233b0ddecac6bd19093f0d18980c4\",\"dweb:/ipfs/QmYGY3jR6A4k8KWzHjGG249EWR6KtoENzdPGv6MZRFhdEW\"]},\"project:/contracts/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"project:/contracts/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343\",\"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z\"]},\"project:/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a3d42f1333d4224b7e6b7914e7ef5ee6d86586a3529bd1da15cbeece0d25b3\",\"dweb:/ipfs/QmXmFqePuCWzBcz9KyBepE7joHMg8jSjcmd5iayyG7jm3y\"]},\"project:/contracts/@openzeppelin/contracts-upgradeable/utils/introspection/IERC1820RegistryUpgradeable.sol\":{\"keccak256\":\"0xb8e07be7f51d2661554d9663cbdedf5e92a21f85e986231109879861a1dd61c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e82e5798831f24ee2bea0cebad3c763d7eaee31a4d7531285cc939f68210fe\",\"dweb:/ipfs/QmckTP18TM9Go9Mvv4ChCoVyh5DHrLshiiJRWYRkS5UbWx\"]},\"project:/contracts/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"project:/contracts/BaconCoin/BaconCoin3.sol\":{\"keccak256\":\"0x54c5c088144b30686b17cbef209b46dfaf542c5f86c787b22422b2ffc4421642\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ad1d18b9bba2465e697b27393da4864b895b99700aaa4a12ca7aeb4c9003d0\",\"dweb:/ipfs/QmcSAkpC4wudKaSQaBGdYVMbc7iMKkkbevAjeJZEbs24mG\"]},\"project:/contracts/ERC20/ERC20UpgradeableFromERC777.sol\":{\"keccak256\":\"0x112713c07a944b0105f38c1de395d387ab74c592e4f8ad39931d6feb13bb60fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9396b690b9d80c5188b06eb3f11bfb3f448825b68fb34d67cc9bdc482d8952e\",\"dweb:/ipfs/QmQkt3VRTigjJbtYf7Rk7ScRCmYtKHjtLrB5Ut27ZjrZvA\"]}},\"version\":1}",
  "networks": {
    "5": {
      "address": "0xa8F0da399B3292D71360880f32C9b947994EDAF4",
      "events": {},
      "links": {},
      "transactionHash": "0x2784acc7af0d00804b89c9415b674e252ff413fe51257681bf2bdb9bd9cd0fcf"
    }
  },
  "schemaVersion": "3.4.7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"./../ERC20/ERC20UpgradeableFromERC777.sol\";\nimport '../@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '../@openzeppelin/contracts/utils/math/SignedSafeMath.sol';\n\ncontract BaconCoin3 is Initializable, ERC20UpgradeableFromERC777 {\n    using SignedSafeMath for int256;\n    using SafeMath for uint256;\n\n    address stakingContract;\n    address airdropContract;\n\n    /// @notice DEPRECATED  \n    /// A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice DEPRECATED  \n    /// The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice The EIP-712 typehash for the permit struct used by the contract\n    bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /*****************************************************\n    *       Variables added in BaconCoin1\n    ******************************************************/\n\n    /// @notice A record of votes checkpoints for a delegate's account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public delegateCheckpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numDelegateCheckpoints;\n\n    /*****************************************************\n    *       EVENTS\n    ******************************************************/\n    \n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /*****************************************************\n    *       BASE FUNCTIONS\n    ******************************************************/\n\n    function setStakingContract(address _stakingContract) public {\n        require(msg.sender == stakingContract, \"Invalid sender\");\n        stakingContract = _stakingContract;\n    }\n\n    function rinkebyOnlySetStakingContract(address _stakingContract) public {\n        require(msg.sender == 0x602eb5180Ce24240cf40f8BE124Cc4d3a2890686 && block.chainid == 4, \"BaconCoin: Invalid sender or chain\");\n        stakingContract = _stakingContract;\n    }\n\n    // Transfer func must be overwritten to also moveDelegates when balance is transferred\n    function transfer(address dst, uint amount) public override returns (bool) {\n        require(super.transfer(dst, amount));\n        _moveDelegates(delegates[msg.sender], delegates[dst], amount);\n        return true;\n    }\n\n    // TransferFrom func must be overwritten to also moveDelegates when balance is transferred\n    function transferFrom(address src, address dst, uint256 amount) public override returns (bool) {\n        require(super.transferFrom(src, dst, amount));\n        _moveDelegates(delegates[src], delegates[dst], amount);\n        return true;\n    }\n\n    function mint(address account, uint256 amount) public {\n        require(msg.sender == stakingContract || msg.sender == airdropContract, \"Invalid mint sender\");\n        super._mint(account, amount);\n        _moveDelegates(address(0), delegates[account], amount);\n    }\n\n    function burn(uint256 amount, bytes memory data) public {\n        super._burn(msg.sender, amount);\n        _moveDelegates(delegates[msg.sender], address(0), amount);\n    }\n\n    /**  \n    *   @dev Function version returns uint depending on what version the contract is on\n    */\n    function version() public pure returns (uint) {\n        return 3;\n    }\n    \n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal view returns (uint) {\n        uint256 chainId;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n\n    /********************************\n    *     GOVERNANCE FUNCTIONS      *\n    *********************************/\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name())), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"BaconCoin: invalid signature\");\n        require(nonce == nonces[signatory]++, \"BaconCoin: invalid nonce\");\n        require(block.timestamp <= expiry, \"BaconCoin: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint256) {\n        uint32 nCheckpoints = numDelegateCheckpoints[account];\n        return nCheckpoints > 0 ? delegateCheckpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n    * @notice Determine the prior number of votes for an account as of a block number\n    * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n    * @param account The address of the account to check\n    * @param blockNumber The block number to get the vote balance at\n    * @return The number of votes the account had as of the given block\n    */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint256) {\n        require(blockNumber < block.number, \"BaconCoin: not yet determined\");\n\n        uint32 nCheckpoints = numDelegateCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (delegateCheckpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return delegateCheckpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (delegateCheckpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = delegateCheckpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return delegateCheckpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator);\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numDelegateCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? delegateCheckpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numDelegateCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? delegateCheckpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"BaconCoin: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && delegateCheckpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          delegateCheckpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          delegateCheckpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numDelegateCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n}",
  "sourceMap": "317:10245:55:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "/src/contracts/BaconCoin/BaconCoin3.sol",
  "updatedAt": "2022-10-12T17:10:51.796Z",
  "userdoc": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "An event thats emitted when an account changes its delegate"
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "An event thats emitted when a delegate account's vote balance changes"
      }
    },
    "kind": "user",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "PERMIT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the permit struct used by the contract"
      },
      "checkpoints(address,uint32)": {
        "notice": "DEPRECATED   A record of votes checkpoints for each account, by index"
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`"
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`"
      },
      "delegateCheckpoints(address,uint32)": {
        "notice": "A record of votes checkpoints for a delegate's account, by index"
      },
      "delegates(address)": {
        "notice": "A record of each accounts delegate"
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`"
      },
      "getPriorVotes(address,uint256)": {
        "notice": "Determine the prior number of votes for an account as of a block number"
      },
      "nonces(address)": {
        "notice": "A record of states for signing / validating signatures"
      },
      "numCheckpoints(address)": {
        "notice": "DEPRECATED   The number of checkpoints for each account"
      },
      "numDelegateCheckpoints(address)": {
        "notice": "The number of checkpoints for each account"
      }
    },
    "version": 1
  }
}